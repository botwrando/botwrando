{"version":3,"sources":["lib/run.ts","lib/keyboard.ts","lib/utils.ts","lib/shrines.ts","lib/rando.ts","components/AppHeader/AppHeader.tsx","components/HotkeyList/HotkeyList.tsx","components/Help/Help.tsx","components/AppFooter/AppFooter.tsx","components/SeedInfo/SeedInfo.tsx","components/SeedPicker/SeedPicker.tsx","lib/time.ts","components/FormattedTime/FormattedTime.tsx","components/ShrineInfo/ShrineInfo.tsx","components/SplitHistory/SplitHistory.tsx","components/RunTimer/RunTimer.tsx","components/SplitTimer/SplitTimer.tsx","components/QuickMap/QuickMap.tsx","components/RunDisplay/RunDisplay.tsx","components/RunManager/RunManager.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["RunState","bindings","addSplit","desc","undoSplit","skipSplit","resetSplits","pause","toggleHelp","toggleBloodMoon","registerCallbacks","map","Object","entries","forEach","value","key","fn","callback","keyboardProfile","Space","Backspace","Period","KeyR","KeyP","KeyH","KeyB","Numpad1","Numpad8","Numpad2","Numpad3","Numpad5","NumpadAdd","NumpadSubtract","NumpadDivide","KeyQ","NumpadMultiply","F1","F4","F5","F3","F6","getProfile","parseKeypress","code","effect","handleKey","_key","event","re_shortkeynames","re_shortnumpadnames","stringsubst","Add","Subtract","Divide","Multiply","getKeyMap","keys","list","keyGetter","Map","item","collection","get","push","set","groupBy","getShrine","shrine_id","shrines","find","index","PLATEAU_SHRINES","range","bound","limit","start","end","base","Array","from","idx","getRandomizedShrines","seed","normalShrines","filter","id","indexOf","shuffle","eventideSlot","splice","AppHeader","hasSeed","setRun","className","onClick","state","None","runner","rundate","pausedTime","shrineIds","splits","wrSplits","pbSplits","HotkeyList","_props","key_names","toString","keyname","outstr","search","replace","alphanum_matches","exec","length","numpad_matches","getShortKeyname","MobileControls","props","mouse","mouseCallbacks","touch","touchCallbacks","onSplit","onTouchEnd","onUndo","onPause","onReset","onBloodMoon","DesktopHelp","run","showHelp","Instructions","AppFooter","isTouch","window","matchMedia","matches","SeedInfo","SeedPicker","useState","setSeed","queryParams","URLSearchParams","location","has","querySeed","htmlFor","a","numChars","chars","Math","random","getRandomSeed","type","placeholder","onChange","target","_event","onPickedSeed","trunc","ts","floor","pad","zpad","out","substr","max","getTimestamp","tsMagn","abs","h","m","s","ms","FormattedTime","p","timestamp","fullFormat","plusSign","emptyLabel","posSign","Number","NEGATIVE_INFINITY","sign","smartFormat","ShrineInfo","current_shrine","diffProps","diff","plus_sign","empty_label","diff_ts","diff_classes","is_ahead","is_pb","counter","name","join","SplitHistory","forceScroll","rando_id","has_split","ShrineList","split","get_split","curr_split","other_split","get_diff","pb_split","get_is_pb","RunTimer","setPausedTime","React","startedAt","pausedAt","toggleTimer","setToggleTimer","timerDisplay","setTimerDisplay","request_ref","useRef","update_time","_time","Init","Running","prev","Date","now","Paused","_prev","useEffect","current","requestAnimationFrame","cancelAnimationFrame","SplitTimer","currentShrine","timeclasses","setTimeclasses","time_classes","Ended","onUpdatePausedTime","SplitDetails","QuickMap","shrine","bgClasses","RunDisplay","size","RunManager","setShowHelp","isDone","isActive","bloodMoonState","setBloodMoonState","updateSplits","updateShrines","setRunState","delete","clear","_e","classes","getClasses","handleKeys","onKeyEvent","App","rel","href","as","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2f7dc52b.chunk.js","sourcesContent":["export enum RunState {\n\tNone,\n\tInit,\n\tRunning,\n\tPaused,\n\tEnded\n}\n\nexport type Run = {\n\tstate: RunState;\n\trunner: string;\n\trundate: number;\n\tpausedTime: number;\n\tseed: string;\n\tshrineIds: number[];\n\tsplits: Map<number, number>;\n\twrSplits: Map<number, number>;\n\tpbSplits: Map<number, number>;\n};\n\nexport const getDefaultRun = () => ({\n  state: RunState.None,\n  runner: 'Default Runner',\n  rundate: -1,\n  pausedTime: -1,\n  seed: '',\n  shrineIds: [],\n  splits: new Map<number, number>([]),\n  wrSplits: new Map<number, number>([]),\n  pbSplits: new Map<number, number>([]),\n});\n","import { groupBy } from './utils';\n\nexport type Effect =\n\t| 'addSplit'\n\t| 'undoSplit'\n\t| 'skipSplit'\n\t| 'resetSplits'\n\t| 'pause'\n\t| 'toggleHelp'\n\t| 'toggleBloodMoon';\n\nexport type FunctionMap = {\n\t[key in Effect]: Function;\n};\n\nexport type Binding = {\n\tdesc: string;\n\tcallback?: Function;\n};\n\nexport type BindingMap = {\n\t[key: string]: Binding;\n};\n\nexport let bindings: BindingMap = {\n  addSplit: { desc: 'Start the run / add a split' },\n  undoSplit: { desc: 'Undo last split' },\n  skipSplit: { desc: 'Skip a split' },\n  resetSplits: { desc: 'Reset the run' },\n  pause: { desc: 'Pause the timer' },\n  toggleHelp: { desc: 'Show / hide help' },\n  toggleBloodMoon: { desc: 'Toggle Blood Moon shrine' }\n};\n\nexport const registerCallbacks = (map: FunctionMap) => {\n  Object.entries(map).forEach(value => {\n    const [key, fn] = value;\n    bindings[key].callback = fn;\n  });\n};\n\ntype Profile = { [key: string]: Effect };\n\nconst profileTeetow: Profile = {\n  Space: 'addSplit',\n  Backspace: 'undoSplit',\n  Period: 'skipSplit',\n  KeyR: 'resetSplits',\n  KeyP: 'pause',\n  KeyH: 'toggleHelp',\n  KeyB: 'toggleBloodMoon'\n};\n\nconst profileLivesplit: Profile = {\n  Numpad1: 'addSplit',\n  Numpad8: 'undoSplit',\n  Numpad2: 'skipSplit',\n  Numpad3: 'resetSplits',\n  Numpad5: 'pause'\n};\n\nconst profileSpecs: Profile = {\n  NumpadAdd: 'addSplit',\n  NumpadSubtract: 'undoSplit',\n  NumpadDivide: 'skipSplit',\n  KeyQ: 'resetSplits',\n  NumpadMultiply: 'pause'\n};\n\nconst profileDj: Profile = {\n  F1: 'addSplit',\n  F4: 'undoSplit',\n  F5: 'skipSplit',\n  F3: 'resetSplits',\n  F6: 'pause'\n};\n\nconst keyboardProfile: Profile = {\n  ...profileTeetow,\n  ...profileLivesplit,\n  ...profileSpecs,\n  ...profileDj\n};\n\nexport const getProfile = () => keyboardProfile;\n\nexport const parseKeypress = (code: string): Function | undefined => {\n  let effect = keyboardProfile[code];\n  return bindings[effect]?.callback;\n};\n\nexport const handleKey = (_key: string, event: KeyboardEvent) => {\n  const callback = parseKeypress(event.code);\n  if (callback) callback();\n};\n\nconst re_shortkeynames = /Key(.+)/;\nconst re_shortnumpadnames = /Numpad(.+)/;\nconst stringsubst: any = {\n  Add: '+',\n  Subtract: '-',\n  Divide: '/',\n  Multiply: '*',\n  Period: '.'\n};\n\nexport const getShortKeyname = (keyname: string) => {\n  let outstr = keyname;\n\n  Object.entries(stringsubst).forEach(value => {\n    const [search, replace] = value;\n    outstr = outstr.replace(search, replace as string);\n  });\n\n  const alphanum_matches = re_shortkeynames.exec(outstr);\n  if (alphanum_matches && alphanum_matches.length > 0) {\n    return alphanum_matches[1];\n  }\n\n  const numpad_matches = re_shortnumpadnames.exec(outstr);\n  if (numpad_matches && numpad_matches.length > 0) {\n    let [,outstr] = numpad_matches;\n    return `Num ${outstr}`;\n  }\n\n  return outstr;\n};\n\nexport const getKeyMap = () => {\n  const keys = getProfile();\n  const grouped = groupBy(Object.entries(keys), (value: [string, Effect]) => {\n    const [, effect] = value;\n    return bindings[effect].desc;\n  });\n  return grouped;\n};\n\nexport default {\n  bindings,\n  registerCallbacks,\n  getKeyMap,\n  getProfile,\n  parseKeypress,\n  handleKey\n};\n","export function groupBy(list: any, keyGetter: any) {\n  const map = new Map();\n  list.forEach((item: any) => {\n    const key = keyGetter(item);\n    const collection = map.get(key);\n    if (!collection) {\n      map.set(key, [item]);\n    } else {\n      collection.push(item);\n    }\n  });\n  return map;\n}\n\nexport function throttle(func: Function, limit: number): Function {\n  let inThrottle: boolean;\n\n  return function(this: any): any {\n    const args = arguments;\n    const context = this;\n\n    if (!inThrottle) {\n      inThrottle = true;\n      func.apply(context, args);\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n}\n","import shrines from '../data/shrines.json'\n\nexport type Location = {\n\tx: String;\n\ty: String;\n\tz: String;\n};\n\nexport type Shrine = {\n\tindex: Number;\n\tname: String | null;\n\tdesc: String | null;\n\tregion: String | null;\n\tlocation: Location;\n\tisBloodMoon: Boolean;\n\tisPlateau: Boolean;\n};\n\nexport const getShrine = (shrine_id: number): Shrine | undefined =>\n  shrines.find(item => item.index === shrine_id);\n\nexport const PLATEAU_SHRINES: number[] = [38, 41, 9, 65];\nexport const BLOOD_MOON_SHRINE: number = 78;\nexport const EVENTIDE_SHRINE: number = 97;\n\nexport const isNormalShrine = (id: number): Boolean => {\n  return (\n    PLATEAU_SHRINES.indexOf(id) === -1 &&\n\t\tBLOOD_MOON_SHRINE !== id && EVENTIDE_SHRINE !== id\n  );\n};\n","import { shuffle } from 'shuffle-seed';\nimport { PLATEAU_SHRINES, EVENTIDE_SHRINE, isNormalShrine } from './shrines';\n\nexport function range(bound: number, limit: number = 0): number[] {\n  const start = limit ? bound : 0;\n  const end = limit ? limit : bound;\n  const base = [...Array.from(Array(end - start + 1).keys())];\n  return base.map((idx: number) => start + idx);\n}\n\nexport function getRandomSeed(numChars = 12): string {\n  const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n  let a;\n  for (a = ''; a.length < numChars;) { a += chars[(Math.random() * 60) | 0]; }\n  return a;\n}\n\nexport function getRandomizedShrines(seed: string): number[] {\n  const normalShrines = range(119).filter(item => isNormalShrine(item));\n  const [eventideSlot,] = shuffle(range(80, 118), seed);\n\n  const shrines: number[] = [];\n  shrines.push(...shuffle(PLATEAU_SHRINES, seed));\n  shrines.push(...shuffle(normalShrines, seed));\n  shrines.splice(eventideSlot, 0, EVENTIDE_SHRINE);\n\n  return shrines;\n}\n","import React from 'react';\nimport { Run, getDefaultRun } from '../../lib/run';\n\ntype AppHeaderProps = {\n  hasSeed?: boolean;\n  setRun: (run: Run) => void;\n};\n\nexport function AppHeader({ hasSeed, setRun }: AppHeaderProps) {\n  const onQuit = () => setRun(getDefaultRun());\n  return (\n    <div className=\"header\">\n      <div className=\"caption\">BotW All Shrines Randomizer</div>\n      {hasSeed && (\n        <button id=\"quit\" className=\"btn-text btn-back\" onClick={onQuit}>\n          Quit run\n        </button>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport './HotkeyList.scss';\nimport { getKeyMap, getShortKeyname } from '../../lib/keyboard';\n\nexport type HotkeyListProps = {};\n\nexport const HotkeyList = (_props: HotkeyListProps) => {\n  const map = getKeyMap();\n  return (\n    <>\n      {Array.from(map).map((value: [string, Function[][]]) => {\n        const [desc, keys] = value;\n\n        const key_names = keys.map(key => key[0]);\n        return (\n          <div className=\"hotkey\" key={keys.toString()}>\n            <div className=\"keys\">\n              {' '}\n              {key_names.map(key => (\n                <div className=\"key\" key={key.toString()}>\n                  {getShortKeyname(key.toString())}\n                </div>\n              ))}\n            </div>\n            <div className=\"desc\">{desc}</div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n","import React from 'react';\nimport { HotkeyList } from '../HotkeyList/HotkeyList';\nimport { Run } from '../../lib/run';\n\ntype MobileProps = {\n  run: Run;\n  touchCallbacks: {\n    onSplit: (event: React.TouchEvent) => void;\n    onUndo: (event: React.TouchEvent) => void;\n    onReset: (event: React.TouchEvent) => void;\n    onPause: (event: React.TouchEvent) => void;\n    onBloodMoon: (event: React.TouchEvent) => void;\n  },\n  mouseCallbacks: {\n    onSplit: (event: React.MouseEvent) => void;\n    onUndo: (event: React.MouseEvent) => void;\n    onReset: (event: React.MouseEvent) => void;\n    onPause: (event: React.MouseEvent) => void;\n    onBloodMoon: (event: React.MouseEvent) => void;\n  }\n};\n\nexport const MobileControls = (props: MobileProps) => {\n  const mouse = props.mouseCallbacks;\n  const touch = props.touchCallbacks;\n\n  return (\n    <div className=\"touchpanel\">\n      <button className=\"split\" onClick={mouse.onSplit} onTouchEnd={touch.onSplit}>\n        Split\n      </button>\n      <button className=\"undo\" onClick={mouse.onUndo} onTouchEnd={touch.onUndo}>\n        Undo\n      </button>\n      <button className=\"pause\" onClick={mouse.onPause} onTouchEnd={touch.onPause}>\n        Pause\n      </button>\n      <button className=\"reset\" onClick={mouse.onReset} onTouchEnd={touch.onReset}>\n        Reset\n      </button>\n      <button className=\"bloodmoon\" onClick={mouse.onBloodMoon} onTouchEnd={touch.onBloodMoon}>\n        Blood Moon\n      </button>\n    </div>\n  );\n};\n\ntype DesktopProps = {\n\trun: Run;\n\tshowHelp: boolean;\n};\n\nexport const DesktopHelp = (props: DesktopProps) => {\n  const { run, showHelp } = props;\n  return (\n    <div className={`help ${showHelp ? 'is-visible' : ''}`}>\n      {!showHelp && (\n        <>\n          <div className=\"helphint\">\n            <span className=\"key\">Space</span> to start / split\n            &nbsp;\n            <span className=\"key\">H</span> to show / hide help\n          </div>\n        </>\n      )}\n      {showHelp && (\n        <>\n          <div className=\"instructions\">\n            <Instructions run={run} />\n          </div>\n          <div className=\"hotkeys\">\n            <HotkeyList />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const Instructions = (props: { run: Run }) => {\n  const { run } = props;\n  return (\n    <>\n      <p>\n\t\t\t\tAll shrines except the Blood Moon shrine has been shuffled using\n\t\t\t\tthe seed {run.seed}.\n      </p>\n      <p>\n\t\t\t\tHit <span className=\"key\">B</span> to insert a Blood Moon shrine\n\t\t\t\tsplit.\n      </p>\n    </>\n  );\n};\n","import React from 'react';\nimport { Run } from '../../lib/run';\nimport { DesktopHelp, MobileControls } from '../Help/Help';\n\nexport type AppFooterProps = {\n  run: Run,\n  touchCallbacks: {\n    onSplit: (event: React.TouchEvent) => void,\n    onUndo: (event: React.TouchEvent) => void,\n    onReset: (event: React.TouchEvent) => void,\n    onPause: (event: React.TouchEvent) => void,\n    onBloodMoon: (event: React.TouchEvent) => void,\n  },\n  mouseCallbacks: {\n    onSplit: (event: React.MouseEvent) => void,\n    onUndo: (event: React.MouseEvent) => void,\n    onReset: (event: React.MouseEvent) => void,\n    onPause: (event: React.MouseEvent) => void,\n    onBloodMoon: (event: React.MouseEvent) => void,\n  },\n  showHelp: boolean,\n};\n\nexport function AppFooter({ run, touchCallbacks, mouseCallbacks, showHelp }: AppFooterProps) {\n  const isTouch = window.matchMedia('(pointer: coarse)').matches;\n  return run.seed !== '' ? (\n    <div className=\"footer\">\n      {isTouch ? (\n        <MobileControls\n          run={run}\n          touchCallbacks={touchCallbacks}\n          mouseCallbacks={mouseCallbacks}\n        />\n      ) : (\n        <DesktopHelp run={run} showHelp={showHelp} />\n      )}\n    </div>\n  ) : (\n    <></>\n  );\n};\n","import React from 'react';\nimport { Run } from '../../lib/run';\n\nexport type SeedInfoProps = {\n  run: Run\n}\n\nexport function SeedInfo({ run }: SeedInfoProps) {\n  return (\n    <div className=\"seedinfo\">\n      { run.seed ? (<div className=\"seed\">Seed: {run.seed}</div>) : <></>}\n    </div>\n  );\n}\n","import React, { ChangeEvent, useState } from 'react';\nimport { getRandomSeed } from '../../lib/rando';\n\ntype SeedPickerProps = {\n  onPickedSeed: (seed: string) => void;\n};\n\nexport const SeedPicker = (props: SeedPickerProps) => {\n  const exampleValue = 'CHANGEME';\n\n  const [seed, setSeed] = useState(exampleValue);\n\n  const queryParams = new URLSearchParams(window.location.search);\n  if ((!seed || seed === exampleValue) && queryParams.has('seed')) {\n    const querySeed: string | null = queryParams.get('seed');\n    if (querySeed) {\n      setSeed(querySeed);\n    }\n  }\n\n  const handleUpdateSeed = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSeed(event.target.value);\n  };\n\n  const generateSeed = () => {\n    setSeed(getRandomSeed());\n  };\n\n  const handleSelectSeed = (\n    _event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    props.onPickedSeed(seed);\n  };\n\n  return (\n    <div className=\"seedpicker\">\n      <label htmlFor=\"input-seedpicker\">Choose your seed!</label>\n\n      <button id=\"generate-seed\" onClick={generateSeed}>\n        Randomize\n      </button>\n      <input\n        type=\"text\"\n        id=\"input-seedpicker\"\n        value={seed}\n        placeholder={exampleValue}\n        onChange={handleUpdateSeed}\n      />\n      <button id=\"go-button\" onClick={handleSelectSeed}>\n        Start run\n      </button>\n    </div>\n  );\n};\n","const HOUR_THRES = 1000 * 60 * 60;\nconst MINUTE_THRES = 1000 * 60;\n\nexport type Timestamp = {\n  sign?: string;\n  h?: string;\n  m?: string;\n  s?: string;\n  ms?: string;\n};\n\nexport const trunc = (ts: number) => {\n  if (ts < 10) {\n    return 0;\n  }\n  return Math.floor(ts / 10);\n};\n\nexport const pad = (ts: number, zpad: number = 2) => {\n  let out = ts.toString();\n  while (out.length < zpad) {\n    out = '0' + out;\n  }\n  return out.substr(0, (zpad > 0 ? Math.max(zpad, out.length) : out.length));\n};\n\nexport const getTimestamp = (ts: number): Timestamp => {\n  let tsMagn: number = Math.abs(ts);\n  const h = Math.floor(tsMagn / HOUR_THRES);\n  tsMagn -= h * HOUR_THRES;\n  const m = Math.floor(tsMagn / MINUTE_THRES);\n  tsMagn -= m * MINUTE_THRES;\n  const s = Math.floor(tsMagn / 1000);\n  tsMagn -= s * 1000;\n  const ms = tsMagn;\n  return { h: pad(h), m: pad(m), s: pad(s), ms: pad(trunc(ms)) };\n};\n\nexport const smartFormat = (\n  timestamp: number,\n  fullFormat: boolean,\n  posSign: string = '',\n): Timestamp => {\n  if (timestamp === Number.NEGATIVE_INFINITY) {\n    return {}\n  }\n  const sign = timestamp >= 0 ? posSign : '-';\n  const { h, m, s, ms } = getTimestamp(timestamp);\n\n  let out = {};\n\n  if (Math.abs(timestamp) >= HOUR_THRES)\n    out = fullFormat ? { h, m, s, ms } : { h, m, s };\n  else if (Math.abs(timestamp) >= MINUTE_THRES)\n    out = fullFormat ? { m, s, ms } : { m, s };\n  else\n    out = { s, ms };\n  out = { ...out, sign };\n\n  return out;\n};\n","import React from 'react';\nimport { smartFormat } from '../../lib/time';\n\nexport type FormattedTimeProps = {\n  timestamp?: number;\n  fullFormat?: boolean;\n  plusSign?: string;\n  emptyLabel?: string;\n};\n\nexport const FormattedTime = (props: FormattedTimeProps) => {\n  const p = {\n    timestamp: 0,\n    fullFormat: false,\n    plusSign: '',\n    emptyLabel: '--:--',\n    ...props\n  }\n  const { sign, h, m, s, ms } = smartFormat(p.timestamp, p.fullFormat);\n  return (\n    <>\n      {sign && (<><span className=\"sign\">{sign}</span></>)}\n      {h && (<><span className=\"h\">{h}</span>:</>)}\n      {m && (<><span className=\"m\">{m}</span>:</>)}\n      {s && (<><span className=\"s\">{s}</span></>)}\n      {ms && (<><span className=\"ms\">.{ms}</span></>)}\n      {(!h && !m && !s && !ms) && (<span className=\"empty\">{p.emptyLabel}</span>)}\n    </>\n  );\n};\n","import React from 'react';\nimport { FormattedTime } from '../FormattedTime/FormattedTime';\nimport './ShrineInfo.scss';\nimport { getShrine } from '../../lib/shrines';\n\nexport type ShrineInfoProps = {\n\tcounter: number;\n\tshrine_id: number;\n\ttimestamp: number;\n\tis_main?: boolean;\n\tdiff?: number;\n\tis_ahead?: boolean;\n\tis_pb?: boolean;\n};\n\nexport const ShrineInfo = (props: ShrineInfoProps) => {\n  const current_shrine = getShrine(props.shrine_id);\n\n  const diffProps = {\n    timestamp: props.diff,\n    plus_sign: '+',\n    empty_label: '--'\n  };\n  const diff_ts = props.diff ? <FormattedTime {...diffProps} /> : '';\n  const ts = <FormattedTime timestamp={props.timestamp} />;\n\n  const diff_classes = ['diff'];\n  if (props.is_ahead) diff_classes.push('is-ahead');\n  if (props.is_pb) diff_classes.push('is-pb');\n\n  return (\n    <div className=\"shrine infolog\">\n      <div className=\"counter\">{props.counter + 1}</div>\n      <div className=\"name\">{current_shrine?.name}</div>\n      <div className={diff_classes.join(' ')}>{diff_ts}</div>\n      <div className=\"time\">{ts}</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ScrollableFeed from 'react-scrollable-feed';\nimport { Run } from '../../lib/run';\nimport { ShrineInfo } from '../ShrineInfo/ShrineInfo';\n\nconst ShrineList = (\n  shrine_id: number,\n  rando_id: number,\n  timestamp: number,\n  diff: number,\n  is_pb: boolean\n) => (\n  <ShrineInfo\n    key={shrine_id}\n    shrine_id={shrine_id}\n    counter={rando_id}\n    timestamp={timestamp}\n    diff={diff}\n    is_ahead={diff <= 0}\n    is_pb={is_pb}\n  />\n);\n\nexport type SplitHistoryProps = {\n  run: Run;\n};\n\nexport const SplitHistory = (props: SplitHistoryProps) => {\n  const { run } = props;\n\n  const has_split = (rando_id: number) => run.splits.get(rando_id);\n\n  const get_split = (rando_id: number) => {\n    const split = run.splits.get(rando_id);\n    return split ? split : Number.NEGATIVE_INFINITY;\n  };\n\n  const get_diff = (rando_id: number): number => {\n    const curr_split = run.splits.get(rando_id);\n    const other_split = run.wrSplits.get(rando_id);\n    if (curr_split && other_split) return curr_split - other_split;\n\n    return Number.NEGATIVE_INFINITY;\n  };\n\n  const get_is_pb = (rando_id: number) => {\n    const curr_split = run.splits.get(rando_id);\n    const pb_split = run.pbSplits.get(rando_id);\n    if (curr_split && pb_split) return curr_split - pb_split < 0;\n\n    return false;\n  };\n\n  return (\n    <div className=\"history\">\n      <ScrollableFeed forceScroll={true} className=\"historylist\">\n        {run.shrineIds\n          .filter((shrine_id, rando_id) => has_split(rando_id))\n          .map((shrine_id, rando_id) =>\n            ShrineList(\n              shrine_id,\n              rando_id,\n              get_split(rando_id),\n              get_diff(rando_id),\n              get_is_pb(rando_id)\n            )\n          )}\n      </ScrollableFeed>\n    </div>\n  );\n};\n","import React from 'react';\nimport { FormattedTime } from '../FormattedTime/FormattedTime';\nimport { Run, RunState } from '../../lib/run';\n\ntype ToggleTimer = {\n  startedAt: number;\n  pausedAt: number;\n};\n\nexport type RunTimerProps = {\n  run: Run;\n  setPausedTime: Function;\n};\n\nexport const RunTimer = (props: RunTimerProps) => {\n  const { run, setPausedTime } = props;\n  const [toggleTimer, setToggleTimer] = React.useState<ToggleTimer>({\n    startedAt: -1,\n    pausedAt: -1\n  });\n  const [timerDisplay, setTimerDisplay] = React.useState(0);\n\n  const request_ref = React.useRef<number>(-1);\n\n  const update_time = (_time: number) => {\n    if (run.state === RunState.Init) {\n      setTimerDisplay(0);\n      setPausedTime(-1);\n    }\n    if (run.state === RunState.Running) {\n      if (toggleTimer.startedAt === -1) {\n        setToggleTimer(prev => ({ ...prev, startedAt: Date.now() }));\n      }\n      if (toggleTimer.pausedAt !== -1) {\n        setPausedTime(run.pausedTime + Date.now() - toggleTimer.pausedAt);\n        setToggleTimer(prev => ({ ...prev, pausedAt: -1 }));\n      }\n      setTimerDisplay(Date.now() - run.rundate - run.pausedTime);\n    } else if (run.rundate >= 0 && run.state === RunState.Paused) {\n      if (toggleTimer.startedAt !== -1) {\n      }\n      if (toggleTimer.pausedAt === -1) {\n        setToggleTimer(_prev => ({\n          startedAt: -1,\n          pausedAt: Date.now()\n        }));\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (run.rundate <= 0) {\n      setToggleTimer({ startedAt: -1, pausedAt: -1 });\n    }\n  }, [run.rundate]);\n\n  React.useEffect(() => {\n    request_ref.current = requestAnimationFrame(update_time);\n    return () => cancelAnimationFrame(request_ref.current);\n  });\n\n  return <FormattedTime timestamp={timerDisplay} fullFormat={true} />;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Run, RunState } from '../../lib/run';\nimport { RunTimer } from '../RunTimer/RunTimer';\nimport { getShrine } from '../../lib/shrines';\n\nexport type SplitTimerProps = {\n  run: Run;\n  currentShrine: number;\n  onUpdatePausedTime: (paused_time: number) => void;\n};\n\nexport const SplitTimer = (props: SplitTimerProps) => {\n  const { run, currentShrine } = props;\n  const shrine_id = run.shrineIds[currentShrine];\n  const current_shrine = getShrine(shrine_id);\n\n  const [timeclasses, setTimeclasses] = useState(['time']);\n\n  useEffect(() => {\n    const time_classes = ['time'];\n    if (run.state === RunState.Init) time_classes.push('is-initial');\n    if (run.state === RunState.Paused) time_classes.push('is-paused');\n    if (run.state === RunState.Ended) time_classes.push('is-ended');\n    setTimeclasses(time_classes);\n  }, [run.state]);\n\n  const getDetailsProps = () => {\n    if (run.state !== RunState.Ended) {\n      return {\n        counter: currentShrine > -1 ? currentShrine + 1 : '',\n        name: current_shrine?.name ? current_shrine.name : 'Ready to go',\n        desc: current_shrine?.desc\n          ? current_shrine.desc\n          : 'Start the timer to reveal the first shrine!'\n      };\n    } else {\n      return {\n        counter: '',\n        name: 'Congratulations!',\n        desc: `You've completed ${run.seed}`\n      };\n    }\n  };\n  return (\n    <div className=\"shrine current\">\n      <SplitDetails {...getDetailsProps()} />\n      <div className={timeclasses.join(' ')}>\n        <RunTimer run={run} setPausedTime={props.onUpdatePausedTime} />\n      </div>\n    </div>\n  );\n};\n\nconst SplitDetails = (props: {\n  counter: String | Number;\n  name: String;\n  desc: String;\n}) => (\n  <>\n    <div className=\"counter\">{props.counter}</div>\n    <div className=\"name\">{props.name}</div>\n    <div className=\"desc\"> {props.desc} </div>\n  </>\n);\n","import React from 'react';\nimport { Shrine } from '../../lib/shrines';\nimport '../WorldMap/WorldMap.scss';\nexport type QuickMapProps = {\n\tshrine?: Shrine;\n};\n\nexport const QuickMap = (props: QuickMapProps) => {\n  const { shrine } = props;\n  if (!shrine) {\n    return <></>;\n  }\n  const bgClasses = ['mapwrapper'];\n  if (shrine) bgClasses.push(`bg-${shrine.index}`);\n  return (\n    <div className=\"worldmap\">\n      <div className={bgClasses.join(' ')}></div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Run } from '../../lib/run';\nimport { getShrine } from '../../lib/shrines';\nimport { SplitHistory } from '../SplitHistory/SplitHistory';\nimport { SplitTimer } from '../SplitTimer/SplitTimer';\nimport { QuickMap } from '../QuickMap/QuickMap';\n\ntype RunDisplayProps = {\n  run: Run,\n  onUpdatePausedTime: (pausedTime: number) => void\n}\n\nexport function RunDisplay({ run, onUpdatePausedTime }: RunDisplayProps) {\n  return (\n    <div className=\"run-display\">\n      <SplitHistory run={run} />\n      <SplitTimer\n        run={run}\n        currentShrine={run.splits.size}\n        onUpdatePausedTime={onUpdatePausedTime}\n      />\n      <QuickMap shrine={getShrine(run.shrineIds[run.splits.size])} />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport '../../assets/bloodmoon.svg';\nimport { handleKey, registerCallbacks } from '../../lib/keyboard';\nimport { getRandomizedShrines } from '../../lib/rando';\nimport { Run, RunState } from '../../lib/run';\nimport { AppHeader } from '../AppHeader/AppHeader';\nimport { AppFooter } from '../AppFooter/AppFooter';\nimport { SeedInfo } from '../SeedInfo/SeedInfo';\nimport { SeedPicker } from '../SeedPicker/SeedPicker';\nimport { BLOOD_MOON_SHRINE } from '../../lib/shrines';\nimport { RunDisplay } from '../RunDisplay/RunDisplay';\n\ntype RunManagerProps = {\n  run: Run;\n};\n\ntype BloodMoonState = {\n  isDone: boolean;\n  isActive: boolean;\n};\n\nexport const RunManager = (props: RunManagerProps) => {\n  const [run, setRun] = useState(props.run);\n  const [showHelp, setShowHelp] = useState(false);\n  const [bloodMoonState, setBloodMoonState] = useState<BloodMoonState>({\n    isDone: false,\n    isActive: false\n  });\n\n  const onUpdatePausedTime = (pausedTime: number) => {\n    setRun(prev => ({ ...prev, pausedTime }));\n  };\n\n  const updateSplits = (splits: Map<number, number>) => {\n    setRun(prev => ({ ...prev, splits }));\n  };\n\n  const updateShrines = (shrineIds: number[]) => {\n    setRun(prev => ({ ...prev, shrineIds }));\n  };\n\n  const setRunState = (state: RunState) => {\n    setRun(prev => ({ ...prev, state: state }));\n\n    if (state === RunState.Running) {\n      if (run.rundate === -1) {\n        setRun(prev => ({ ...prev, rundate: Date.now() }));\n      }\n    }\n  };\n\n  const addSplit = () => {\n    if (run.state === RunState.Ended) return;\n    if (run.state === RunState.Paused) {\n      setRunState(RunState.Running);\n    }\n    if (run.state === RunState.Init) {\n      setRun(prev => ({ ...prev, rundate: Date.now() }));\n      setRunState(RunState.Running);\n    }\n    if (run.state === RunState.Running) {\n      run.splits.set(\n        run.splits.size,\n        Date.now() - run.rundate - run.pausedTime\n      );\n      updateSplits(run.splits);\n    }\n  };\n\n  const undoSplit = () => {\n    run.splits.delete(run.splits.size - 1);\n    updateSplits(run.splits);\n  };\n\n  React.useEffect(() => {\n    if (\n      run.state === RunState.None ||\n      run.state === RunState.Init ||\n      run.state === RunState.Paused\n    ) {\n      return;\n    }\n    if (run.rundate && run.splits.size > 0) {\n      setRun(prev => ({ ...prev, state: RunState.Running }));\n    }\n    if (run.rundate && run.splits.size >= run.shrineIds.length) {\n      setRun(prev => ({ ...prev, state: RunState.Ended }));\n    }\n  }, [run.state, run.rundate, run.splits.size, run.shrineIds.length]);\n\n  const skipSplit = () => {\n    if (run.state === RunState.Ended) return;\n    run.splits.set(run.splits.size, -1);\n    updateSplits(run.splits);\n  };\n\n  const resetSplits = () => {\n    run.splits.clear();\n    updateSplits(run.splits);\n    setRun(prev => ({ ...prev, pausedTime: 0, rundate: -1 }));\n    setRunState(RunState.Init);\n  };\n\n  const pause = () => setRunState(RunState.Paused);\n\n  const toggleHelp = () => setShowHelp(!showHelp);\n\n  const toggleBloodMoon = () => {\n    const { shrineIds } = run;\n\n    if (bloodMoonState.isDone) {\n      return;\n    }\n    const currentShrine = Math.max(0, run.splits.size);\n\n    if (shrineIds[currentShrine] === BLOOD_MOON_SHRINE) {\n      shrineIds.splice(currentShrine, 1);\n      updateShrines(shrineIds);\n    } else {\n      shrineIds.splice(currentShrine, 0, BLOOD_MOON_SHRINE);\n      updateShrines(shrineIds);\n    }\n  };\n\n  // Blood moon state\n  React.useEffect(() => {\n    const state = {\n      isActive:\n        run.shrineIds[Math.max(0, run.splits.size)] === BLOOD_MOON_SHRINE,\n      isDone: run.splits.has(run.shrineIds.indexOf(BLOOD_MOON_SHRINE))\n    };\n    setBloodMoonState(prev => ({\n      ...prev,\n      ...state\n    }));\n  }, [run, run.splits.size]);\n  React.useEffect(() => {\n    registerCallbacks({\n      addSplit,\n      undoSplit,\n      skipSplit,\n      resetSplits,\n      pause,\n      toggleHelp,\n      toggleBloodMoon\n    });\n  });\n\n  const getClasses = () => {\n    const classes = ['run-manager', 'bg'];\n    if (bloodMoonState.isActive) classes.push('is-blood-moon');\n    return classes.join(' ');\n  };\n\n  // This insanity is because the conversion from TS to JS can't handle the mixed types.\n  const mouseCallbacks = {\n    onSplit: (_e: React.MouseEvent) => { addSplit() },\n    onUndo: (_e: React.MouseEvent) => { undoSplit() },\n    onReset: (_e: React.MouseEvent) => { resetSplits() },\n    onPause: (_e: React.MouseEvent) => { pause() },\n    onBloodMoon: (_e: React.MouseEvent) => { toggleBloodMoon() }\n  };\n  const touchCallbacks = {\n    onSplit: (_e: React.TouchEvent) => { addSplit() },\n    onUndo: (_e: React.TouchEvent) => { undoSplit() },\n    onReset: (_e: React.TouchEvent) => { resetSplits() },\n    onPause: (_e: React.TouchEvent) => { pause() },\n    onBloodMoon: (_e: React.TouchEvent) => { toggleBloodMoon() }\n  };\n\n  const onPickedSeed = (seed: string) => {\n    const shrineIds = getRandomizedShrines(seed);\n    setRun(prev => ({ ...prev, seed, shrineIds }));\n    setRunState(RunState.Init);\n  };\n\n  const mainsection = () =>\n    run.state === RunState.None ? (\n      <SeedPicker onPickedSeed={onPickedSeed} />\n    ) : (\n      <RunDisplay run={run} onUpdatePausedTime={onUpdatePausedTime} />\n    );\n\n  return (\n    <div className={getClasses()}>\n      <KeyboardEventHandler handleKeys={['all']} onKeyEvent={handleKey} />\n      <div className=\"main\">\n        <AppHeader hasSeed={!!run.seed} setRun={setRun} />\n        <SeedInfo run={run} />\n        {mainsection()}\n        <AppFooter\n          run={run}\n          touchCallbacks={touchCallbacks}\n          mouseCallbacks={mouseCallbacks}\n          showHelp={showHelp}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n// import { getRandomizedShrines } from \"../../lib/rando\";\nimport { Run, RunState } from '../../lib/run';\nimport { RunManager } from '../RunManager/RunManager';\nimport '../../styles/style.scss';\nimport '../../assets/bloodmoon.svg';\n\nfunction App() {\n  // const testSeed = \"420SPECSNLUL69\";\n  // getRandomizedShrines(testSeed)\n  const run: Run = {\n    state: RunState.None,\n    runner: 'Probably Specs',\n    rundate: -1,\n    pausedTime: -1,\n    seed: '',\n    shrineIds: [],\n    splits: new Map([]),\n    pbSplits: new Map([]),\n    wrSplits: new Map([])\n  };\n\n  return (\n    <>\n      <link rel=\"preload\" href=\"assets/bloodmoon.svg\" as=\"image\"></link>\n      <RunManager run={run} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable no-console */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n/* eslint-enable no-console */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
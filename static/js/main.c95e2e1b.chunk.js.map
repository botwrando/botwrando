{"version":3,"sources":["lib/run.ts","lib/keyboard.ts","lib/rando.ts","lib/utils.ts","lib/waypoints.ts","components/HotkeyList/HotkeyList.tsx","components/Help/Help.tsx","components/AppFooter/AppFooter.tsx","components/SeedInfo/SeedInfo.tsx","components/AppHeader/AppHeader.tsx","components/QuickMap/QuickMap.tsx","lib/time.ts","components/FormattedTime/FormattedTime.tsx","components/WaypointInfo/WaypointInfo.tsx","components/SplitHistory/SplitHistory.tsx","components/RunTimer/RunTimer.tsx","components/SplitTimer/SplitTimer.tsx","components/RunDisplay/RunDisplay.tsx","components/SeedPicker/SeedPicker.tsx","components/RunManager/RunManager.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["RunState","getDefaultRun","state","None","runner","rundate","pausedTime","seed","showSeed","waypointIds","splits","Map","wrSplits","pbSplits","RandoFlags","bindings","addSplit","desc","undoSplit","skipSplit","resetSplits","pause","toggleHelp","toggleBloodMoon","registerCallbacks","map","Object","entries","forEach","value","key","fn","callback","keyboardProfile","Space","Backspace","Period","KeyR","KeyP","KeyH","KeyB","Numpad1","Numpad8","Numpad2","Numpad3","Numpad5","NumpadAdd","NumpadSubtract","NumpadDivide","KeyQ","NumpadMultiply","F1","F4","F5","F3","F6","getProfile","parseKeypress","code","effect","handleKey","_key","event","re_shortkeynames","re_shortnumpadnames","stringsubst","Add","Subtract","Divide","Multiply","getKeyMap","keys","list","keyGetter","item","collection","get","push","set","groupBy","getWaypoint","waypoint_id","waypoints","find","index","PLATEAU_SHRINES","range","bound","limit","start","end","base","Array","from","idx","RandoPresets","Default","LateEventide","permuteDefault","normalShrines","filter","id","indexOf","shuffle","permuteLateEventide","eventideSlot","splice","HotkeyList","_props","key_names","className","toString","keyname","outstr","search","replace","alphanum_matches","exec","length","numpad_matches","getShortKeyname","MobileControls","props","callbacks","Button","defaultButtonAttrs","onClick","onSplit","onUndo","onPause","onReset","onBloodMoon","DesktopHelp","run","showHelp","Instructions","AppFooter","isTouch","window","matchMedia","matches","SeedInfo","toggleShowSeed","startIcon","VisibilityOff","Visibility","AppHeader","setRun","AppBar","elevation","color","position","Toolbar","disableGutters","Hidden","smDown","Box","mr","Typography","variant","xsDown","mdUp","prev","QuickMap","waypoint","bgClasses","join","trunc","ts","Math","floor","pad","zpad","out","substr","max","getTimestamp","tsMagn","abs","h","m","s","ms","FormattedTime","p","timestamp","fullFormat","plusSign","emptyLabel","posSign","Number","NEGATIVE_INFINITY","sign","smartFormat","WaypointInfo","React","memo","current_wp","diffProps","diff","plus_sign","empty_label","diff_ts","diff_classes","is_ahead","is_pb","counter","name","SplitHistory","forceScroll","rando_id","has_split","WaypointList","split","get_split","curr_split","other_split","get_diff","pb_split","get_is_pb","RunTimer","setPausedTime","useState","startedAt","pausedAt","toggleTimer","setToggleTimer","timerDisplay","setTimerDisplay","request_ref","useRef","update_time","_time","Init","Running","Date","now","Paused","_prev","useEffect","current","requestAnimationFrame","cancelAnimationFrame","SplitTimer","currentWaypoint","current_waypoint","timeclasses","setTimeclasses","time_classes","Ended","SplitDetails","onUpdatePausedTime","RunDisplay","size","SeedPicker","setSeed","queryParams","URLSearchParams","location","has","querySeed","Shuffle","a","numChars","chars","random","getRandomSeed","TextField","label","onChange","target","_event","onPickedSeed","disabled","RunManager","setShowHelp","isDone","isActive","bloodMoonState","setBloodMoonState","updateSplits","updateWaypoints","removeBloodMoonShrine","toDelete","setRunState","delete","clear","_e","preset","getRandomizedWaypoints","classes","getClasses","handleKeys","onKeyEvent","theme","createMuiTheme","palette","type","background","default","primary","main","secondary","text","typography","fontFamily","responsiveFontSizes","App","rel","href","as","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c95e2e1b.chunk.js","sourcesContent":["export enum RunState {\n  None,\n  Init,\n  Running,\n  Paused,\n  Ended,\n}\n\nexport type Run = {\n  state: RunState;\n  runner: string;\n  rundate: number;\n  pausedTime: number;\n  seed: string;\n  showSeed: boolean;\n  waypointIds: number[];\n  splits: Map<number, number>;\n  wrSplits: Map<number, number>;\n  pbSplits: Map<number, number>;\n};\n\nexport const getDefaultRun = () => ({\n  state: RunState.None,\n  runner: 'Default Runner',\n  rundate: -1,\n  pausedTime: -1,\n  seed: '',\n  showSeed: false,\n  waypointIds: [],\n  splits: new Map<number, number>([]),\n  wrSplits: new Map<number, number>([]),\n  pbSplits: new Map<number, number>([]),\n});\n","import { groupBy } from './utils';\n\nexport type CallbackMap = \n  | 'onSplit' \n  | 'onUndo' \n  | 'onPause' \n  | 'onReset' \n  | 'onBloodMoon';\n\nexport type Effect =\n\t| 'addSplit'\n\t| 'undoSplit'\n\t| 'skipSplit'\n\t| 'resetSplits'\n\t| 'pause'\n\t| 'toggleHelp'\n\t| 'toggleBloodMoon';\n\nexport type FunctionMap = {\n\t[key in Effect]: Function;\n};\n\nexport type Binding = {\n\tdesc: string;\n\tcallback?: Function;\n};\n\nexport type BindingMap = {\n\t[key: string]: Binding;\n};\n\nexport let bindings: BindingMap = {\n  addSplit: { desc: 'Start the run / add a split' },\n  undoSplit: { desc: 'Undo last split' },\n  skipSplit: { desc: 'Skip a split' },\n  resetSplits: { desc: 'Reset the run' },\n  pause: { desc: 'Pause the timer' },\n  toggleHelp: { desc: 'Show / hide help' },\n  toggleBloodMoon: { desc: 'Toggle Blood Moon shrine' }\n};\n\nexport const registerCallbacks = (map: FunctionMap) => {\n  Object.entries(map).forEach(value => {\n    const [key, fn] = value;\n    bindings[key].callback = fn;\n  });\n};\n\ntype Profile = { [key: string]: Effect };\n\nconst profileTeetow: Profile = {\n  Space: 'addSplit',\n  Backspace: 'undoSplit',\n  Period: 'skipSplit',\n  KeyR: 'resetSplits',\n  KeyP: 'pause',\n  KeyH: 'toggleHelp',\n  KeyB: 'toggleBloodMoon'\n};\n\nconst profileLivesplit: Profile = {\n  Numpad1: 'addSplit',\n  Numpad8: 'undoSplit',\n  Numpad2: 'skipSplit',\n  Numpad3: 'resetSplits',\n  Numpad5: 'pause'\n};\n\nconst profileSpecs: Profile = {\n  NumpadAdd: 'addSplit',\n  NumpadSubtract: 'undoSplit',\n  NumpadDivide: 'skipSplit',\n  KeyQ: 'resetSplits',\n  NumpadMultiply: 'pause'\n};\n\nconst profileDj: Profile = {\n  F1: 'addSplit',\n  F4: 'undoSplit',\n  F5: 'skipSplit',\n  F3: 'resetSplits',\n  F6: 'pause'\n};\n\nconst keyboardProfile: Profile = {\n  ...profileTeetow,\n  ...profileLivesplit,\n  ...profileSpecs,\n  ...profileDj\n};\n\nexport const getProfile = () => keyboardProfile;\n\nexport const parseKeypress = (code: string): Function | undefined => {\n  let effect = keyboardProfile[code];\n  return bindings[effect]?.callback;\n};\n\nexport const handleKey = (_key: string, event: KeyboardEvent) => {\n  const callback = parseKeypress(event.code);\n  if (callback) callback();\n};\n\nconst re_shortkeynames = /Key(.+)/;\nconst re_shortnumpadnames = /Numpad(.+)/;\nconst stringsubst: any = {\n  Add: '+',\n  Subtract: '-',\n  Divide: '/',\n  Multiply: '*',\n  Period: '.'\n};\n\nexport const getShortKeyname = (keyname: string) => {\n  let outstr = keyname;\n\n  Object.entries(stringsubst).forEach(value => {\n    const [search, replace] = value;\n    outstr = outstr.replace(search, replace as string);\n  });\n\n  const alphanum_matches = re_shortkeynames.exec(outstr);\n  if (alphanum_matches && alphanum_matches.length > 0) {\n    return alphanum_matches[1];\n  }\n\n  const numpad_matches = re_shortnumpadnames.exec(outstr);\n  if (numpad_matches && numpad_matches.length > 0) {\n    let [,outstr] = numpad_matches;\n    return `Num ${outstr}`;\n  }\n\n  return outstr;\n};\n\nexport const getKeyMap = () => {\n  const keys = getProfile();\n  const grouped = groupBy(Object.entries(keys), (value: [string, Effect]) => {\n    const [, effect] = value;\n    return bindings[effect].desc;\n  });\n  return grouped;\n};\n\nexport default {\n  bindings,\n  registerCallbacks,\n  getKeyMap,\n  getProfile,\n  parseKeypress,\n  handleKey\n};\n","import { shuffle } from 'shuffle-seed';\nimport { EVENTIDE_SHRINE, GANON, isNormalShrine, PLATEAU_SHRINES } from './waypoints';\n\nexport function range(bound: number, limit: number = 0): number[] {\n  const start = limit ? bound : 0;\n  const end = limit ? limit : bound;\n  const base = [...Array.from(Array(end - start + 1).keys())];\n  return base.map((idx: number) => start + idx);\n}\n\nexport function getRandomSeed(numChars = 12): string {\n  const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n  let a;\n  for (a = ''; a.length < numChars;) { a += chars[(Math.random() * 60) | 0]; }\n  return a;\n}\n\nenum RandoFlags {\n  None,\n  LateEventide = 1 << 0\n}\n\nexport const RandoPresets = {\n  Default: RandoFlags.LateEventide,\n}\n\nconst permuteDefault = (waypoints: number[], seed: string): void => {\n  const normalShrines = range(119).filter(item => isNormalShrine(item));\n  waypoints.push(...shuffle(PLATEAU_SHRINES, seed));\n  waypoints.push(...shuffle(normalShrines, seed));\n}\n\nconst permuteLateEventide = (waypoints: number[], seed: string): void => {\n  const [eventideSlot,] = shuffle(range(80, 118), seed);\n  waypoints.splice(eventideSlot, 0, EVENTIDE_SHRINE);\n}\n\nexport function getRandomizedWaypoints(seed: string, preset = RandoPresets.Default): number[] {\n  const waypoints: number[] = [];\n  permuteDefault(waypoints, seed)\n\n  if (preset & RandoFlags.LateEventide)\n    permuteLateEventide(waypoints, seed)\n\n  waypoints.push(GANON);\n\n  return waypoints;\n}\n","export function groupBy(list: any, keyGetter: any) {\n  const map = new Map();\n  list.forEach((item: any) => {\n    const key = keyGetter(item);\n    const collection = map.get(key);\n    if (!collection) {\n      map.set(key, [item]);\n    } else {\n      collection.push(item);\n    }\n  });\n  return map;\n}\n\nexport function throttle(func: Function, limit: number): Function {\n  let inThrottle: boolean;\n\n  return function(this: any): any {\n    const args = arguments;\n    const context = this;\n\n    if (!inThrottle) {\n      inThrottle = true;\n      func.apply(context, args);\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n}\n","import waypoints from '../data/waypoints.json';\n\nexport type Location = {\n\tx: String;\n\ty: String;\n\tz: String;\n};\n\nexport type Waypoint = {\n\tindex: Number;\n\tname: String | null;\n\tdesc: String | null;\n\tregion: String | null;\n\tlocation: Location;\n\tisBloodMoon: Boolean;\n\tisPlateau: Boolean;\n};\n\nexport const getWaypoint = (waypoint_id: number): Waypoint | undefined =>\n  waypoints.find(item => item.index === waypoint_id);\n\nexport const PLATEAU_SHRINES: number[] = [38, 41, 9, 65];\nexport const BLOOD_MOON_SHRINE: number = 78;\nexport const EVENTIDE_SHRINE: number = 97;\nexport const GANON: number = 999;\n\nexport const isNormalShrine = (id: number): Boolean => {\n  return (\n    PLATEAU_SHRINES.indexOf(id) === -1 &&\n\t\tBLOOD_MOON_SHRINE !== id && EVENTIDE_SHRINE !== id && GANON !== id\n  );\n};\n","import React from 'react';\nimport './HotkeyList.scss';\nimport { getKeyMap, getShortKeyname } from '../../lib/keyboard';\n\nexport type HotkeyListProps = {};\n\nexport const HotkeyList = (_props: HotkeyListProps) => {\n  const map = getKeyMap();\n  return (\n    <>\n      {Array.from(map).map((value: [string, Function[][]]) => {\n        const [desc, keys] = value;\n\n        const key_names = keys.map(key => key[0]);\n        return (\n          <div className=\"hotkey\" key={keys.toString()}>\n            <div className=\"keys\">\n              {' '}\n              {key_names.map(key => (\n                <div className=\"key\" key={key.toString()}>\n                  {getShortKeyname(key.toString())}\n                </div>\n              ))}\n            </div>\n            <div className=\"desc\">{desc}</div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { Run } from '../../lib/run';\nimport { defaultButtonAttrs } from '../App/App';\nimport { HotkeyList } from '../HotkeyList/HotkeyList';\n\n\ntype MobileProps = {\n  run: Run;\n  callbacks: {\n    onSplit: (event: React.SyntheticEvent) => void;\n    onUndo: (event: React.SyntheticEvent) => void;\n    onReset: (event: React.SyntheticEvent) => void;\n    onPause: (event: React.SyntheticEvent) => void;\n    onBloodMoon: (event: React.SyntheticEvent) => void;\n  }\n};\n\nexport const MobileControls = (props: MobileProps) => {\n  const { callbacks } = props;\n\n  return (\n    <div className=\"touchpanel\">\n      <Button {...{...defaultButtonAttrs, className:'split', onClick:callbacks.onSplit}}>\n        Split\n      </Button>\n      <Button {...{...defaultButtonAttrs, className:'undo' ,onClick:callbacks.onUndo}}>\n        Undo\n      </Button>\n      <Button {...{...defaultButtonAttrs, className:'pause', onClick:callbacks.onPause}}>\n        Pause\n      </Button>\n      <Button {...{...defaultButtonAttrs, className:'reset', onClick:callbacks.onReset}}>\n        Reset\n      </Button>\n      <Button {...{...defaultButtonAttrs, className:'bloodmoon', onClick:callbacks.onBloodMoon}}>\n        Blood Moon\n      </Button>\n    </div>\n  );\n};\n\ntype DesktopProps = {\n  run: Run;\n  showHelp: boolean;\n};\n\nexport const DesktopHelp = (props: DesktopProps) => {\n  const { run, showHelp } = props;\n  return (\n    <div className={`help ${showHelp ? 'is-visible' : ''}`}>\n      {!showHelp && (\n        <>\n          <div className=\"helphint\">\n            <span className=\"key\">Space</span> to start / split\n            &nbsp;\n            <span className=\"key\">H</span> to show / hide help\n          </div>\n        </>\n      )}\n      {showHelp && (\n        <>\n          <div className=\"instructions\">\n            <Instructions run={run} />\n          </div>\n          <div className=\"hotkeys\">\n            <HotkeyList />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const Instructions = (props: { run: Run }) => {\n  const { run } = props;\n  return (\n    <>\n      <p>\n        All shrines except the Blood Moon shrine has been shuffled using\n\t\t\t\tthe seed {run.seed}.\n      </p>\n      <p>\n        Hit <span className=\"key\">B</span> to insert a Blood Moon shrine\n\t\t\t\tsplit.\n      </p>\n    </>\n  );\n};\n","import React from 'react';\nimport { Run } from '../../lib/run';\nimport { DesktopHelp, MobileControls } from '../Help/Help';\n\nexport type AppFooterProps = {\n  run: Run,\n  callbacks: {\n    onSplit: (event: React.SyntheticEvent) => void,\n    onUndo: (event: React.SyntheticEvent) => void,\n    onReset: (event: React.SyntheticEvent) => void,\n    onPause: (event: React.SyntheticEvent) => void,\n    onBloodMoon: (event: React.SyntheticEvent) => void,\n  },\n  showHelp: boolean,\n};\n\nexport function AppFooter({ run, callbacks, showHelp }: AppFooterProps) {\n  const isTouch = window.matchMedia('(pointer: coarse)').matches;\n  return run.seed !== '' ? (\n    <div className=\"footer\">\n      {isTouch ? (\n        <MobileControls run={run} callbacks={callbacks} />\n      ) : (\n        <DesktopHelp run={run} showHelp={showHelp} />\n      )}\n    </div>\n  ) : (\n    <></>\n  );\n};\n","import { Button } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons/';\nimport React from 'react';\nimport './SeedInfo.scss';\n\nexport type SeedInfoProps = {\n  seed: string,\n  showSeed: boolean,\n  toggleShowSeed: () => void\n}\n\nexport function SeedInfo({ seed, showSeed, toggleShowSeed }: SeedInfoProps) {\n  const seedNumberFrame = () => {\n    return showSeed ? (\n      <span className='seednumber'>\n        <span className=\"seednumberbox\">{seed} </span>\n      </span>\n    ) : (\n      <></>\n    );\n  }\n\n  const icon = () => showSeed ? <VisibilityOff /> : <Visibility />\n\n  const toggleText = () => {\n    return showSeed ? ' Hide seed ' : ' Show seed ';\n  }\n\n  const seedViewer = () => {\n    return seed ? (\n      <div className='seed'>\n        <Button {...{ onClick: toggleShowSeed, startIcon:icon() }} className=\"seed-toggle\">\n          {toggleText()}\n        </Button>\n\n        {seedNumberFrame()}\n      </div>\n    ) : (\n      <></>\n    )\n  }\n\n  return (\n    <div className='seedinfo'>\n      {seedViewer()}\n    </div>\n  );\n}\n","import { AppBar, Button, Toolbar, Typography, Hidden, Box } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport React from 'react';\nimport { getDefaultRun, Run } from '../../lib/run';\nimport { SeedInfo } from '../SeedInfo/SeedInfo';\nimport './AppHeader.scss';\n\ntype AppHeaderProps = {\n  seed: string;\n  showSeed: boolean;\n  setRun: (value: React.SetStateAction<Run>) => void;\n};\n\n\nexport function AppHeader({ seed, showSeed, setRun }: AppHeaderProps) {\n  const onQuit = () => setRun(getDefaultRun());\n\n  const onToggleShowSeed = () => {\n    setRun(prev => ({ ...prev, showSeed: !prev.showSeed }));\n  };\n\n  return (\n    <AppBar elevation={0} color='transparent' position='static'>\n      <Toolbar disableGutters={true} className='appheader'>\n        <Hidden smDown>\n          <Box mr={2}>\n            <Typography variant='h6' > BotW All Shrines Randomizer </Typography>\n          </Box>\n        </Hidden>\n        <Hidden xsDown mdUp>\n          <Box mr={2}>\n            <Typography variant='h6' > Randomizer </Typography>\n          </Box>\n        </Hidden>\n        {seed && (\n          <>\n            <SeedInfo seed={seed} showSeed={showSeed} toggleShowSeed={onToggleShowSeed} />\n            <Button id='quit' startIcon={<ArrowBack />} onClick={onQuit}>\n              Quit run\n            </Button>\n          </>\n        )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n","import React from 'react';\nimport { Waypoint } from '../../lib/waypoints';\nimport '../WorldMap/WorldMap.scss';\nexport type QuickMapProps = {\n\twaypoint?: Waypoint;\n};\n\nexport const QuickMap = (props: QuickMapProps) => {\n  const { waypoint } = props;\n  if (!waypoint) {\n    return <></>;\n  }\n  const bgClasses = ['mapwrapper'];\n  if (waypoint) bgClasses.push(`bg-${waypoint.index}`);\n  return (\n    <div className=\"worldmap\">\n      <div className={bgClasses.join(' ')}></div>\n    </div>\n  );\n};\n","const HOUR_THRES = 1000 * 60 * 60;\nconst MINUTE_THRES = 1000 * 60;\n\nexport type Timestamp = {\n  sign?: string;\n  h?: string;\n  m?: string;\n  s?: string;\n  ms?: string;\n};\n\nexport const trunc = (ts: number) => {\n  if (ts < 10) {\n    return 0;\n  }\n  return Math.floor(ts / 10);\n};\n\nexport const pad = (ts: number, zpad: number = 2) => {\n  let out = ts.toString();\n  while (out.length < zpad) {\n    out = '0' + out;\n  }\n  return out.substr(0, (zpad > 0 ? Math.max(zpad, out.length) : out.length));\n};\n\nexport const getTimestamp = (ts: number): Timestamp => {\n  let tsMagn: number = Math.abs(ts);\n  const h = Math.floor(tsMagn / HOUR_THRES);\n  tsMagn -= h * HOUR_THRES;\n  const m = Math.floor(tsMagn / MINUTE_THRES);\n  tsMagn -= m * MINUTE_THRES;\n  const s = Math.floor(tsMagn / 1000);\n  tsMagn -= s * 1000;\n  const ms = tsMagn;\n  return { h: pad(h), m: pad(m), s: pad(s), ms: pad(trunc(ms)) };\n};\n\nexport const smartFormat = (\n  timestamp: number,\n  fullFormat: boolean,\n  posSign: string = '',\n): Timestamp => {\n  if (timestamp === Number.NEGATIVE_INFINITY) {\n    return {}\n  }\n  const sign = timestamp >= 0 ? posSign : '-';\n  const { h, m, s, ms } = getTimestamp(timestamp);\n\n  let out = {};\n\n  if (Math.abs(timestamp) >= HOUR_THRES)\n    out = fullFormat ? { h, m, s, ms } : { h, m, s };\n  else if (Math.abs(timestamp) >= MINUTE_THRES)\n    out = fullFormat ? { m, s, ms } : { m, s };\n  else\n    out = { s, ms };\n  out = { ...out, sign };\n\n  return out;\n};\n","import React from 'react';\nimport { smartFormat } from '../../lib/time';\n\nexport type FormattedTimeProps = {\n  timestamp?: number;\n  fullFormat?: boolean;\n  plusSign?: string;\n  emptyLabel?: string;\n};\n\nexport const FormattedTime = (props: FormattedTimeProps) => {\n  const p = {\n    timestamp: 0,\n    fullFormat: false,\n    plusSign: '',\n    emptyLabel: '--:--',\n    ...props\n  }\n  const { sign, h, m, s, ms } = smartFormat(p.timestamp, p.fullFormat);\n  return (\n    <>\n      {sign && (<><span className=\"sign\">{sign}</span></>)}\n      {h && (<><span className=\"h\">{h}</span>:</>)}\n      {m && (<><span className=\"m\">{m}</span>:</>)}\n      {s && (<><span className=\"s\">{s}</span></>)}\n      {ms && (<><span className=\"ms\">.{ms}</span></>)}\n      {(!h && !m && !s && !ms) && (<span className=\"empty\">{p.emptyLabel}</span>)}\n    </>\n  );\n};\n","import React from 'react';\nimport { getWaypoint } from '../../lib/waypoints';\nimport { FormattedTime } from '../FormattedTime/FormattedTime';\nimport './WaypointInfo.scss';\nimport { Typography } from '@material-ui/core';\n\nexport type WaypointInfoProps = {\n  counter: number;\n  waypoint_id: number;\n  timestamp: number;\n  is_main?: boolean;\n  diff?: number;\n  is_ahead?: boolean;\n  is_pb?: boolean;\n};\n\nexport const WaypointInfo = React.memo((props: WaypointInfoProps) => {\n  const current_wp = getWaypoint(props.waypoint_id);\n\n  const diffProps = {\n    timestamp: props.diff,\n    plus_sign: '+',\n    empty_label: '--'\n  };\n  const diff_ts = props.diff ? <FormattedTime {...diffProps} /> : '';\n  const ts = <FormattedTime timestamp={props.timestamp} />;\n\n  const diff_classes = ['diff'];\n  if (props.is_ahead) diff_classes.push('is-ahead');\n  if (props.is_pb) diff_classes.push('is-pb');\n\n  return (\n    <div key={props.waypoint_id} className=\"waypoint infolog\">\n      <Typography variant=\"h6\" className=\"counter\">{props.counter + 1}</Typography>\n      <Typography variant=\"h5\" className=\"name\">{current_wp?.name}</Typography>\n      <Typography variant=\"h6\" className={diff_classes.join(' ')}>{diff_ts}</Typography>\n      <Typography variant=\"h4\" className=\"time\">{ts}</Typography>\n    </div>\n  );\n});\n","import React from 'react';\nimport ScrollableFeed from 'react-scrollable-feed';\nimport { Run } from '../../lib/run';\nimport { WaypointInfo } from '../WaypointInfo/WaypointInfo';\n\nconst WaypointList = (\n  waypoint_id: number,\n  rando_id: number,\n  timestamp: number,\n  diff: number,\n  is_pb: boolean\n) => (\n  <WaypointInfo\n    key={waypoint_id}\n    waypoint_id={waypoint_id}\n    counter={rando_id}\n    timestamp={timestamp}\n    diff={diff}\n    is_ahead={diff <= 0}\n    is_pb={is_pb}\n  />\n);\n\nexport type SplitHistoryProps = {\n  run: Run;\n};\n\nexport const SplitHistory = (props: SplitHistoryProps) => {\n  const { run } = props;\n\n  const has_split = (rando_id: number) => run.splits.get(rando_id);\n\n  const get_split = (rando_id: number) => {\n    const split = run.splits.get(rando_id);\n    return split ? split : Number.NEGATIVE_INFINITY;\n  };\n\n  const get_diff = (rando_id: number): number => {\n    const curr_split = run.splits.get(rando_id);\n    const other_split = run.wrSplits.get(rando_id);\n    if (curr_split && other_split) return curr_split - other_split;\n\n    return Number.NEGATIVE_INFINITY;\n  };\n\n  const get_is_pb = (rando_id: number) => {\n    const curr_split = run.splits.get(rando_id);\n    const pb_split = run.pbSplits.get(rando_id);\n    if (curr_split && pb_split) return curr_split - pb_split < 0;\n\n    return false;\n  };\n\n  return (\n    <div className=\"history\">\n      <ScrollableFeed forceScroll={true} className=\"historylist\">\n        {run.waypointIds\n          .filter((waypoint_id, rando_id) => has_split(rando_id))\n          .map((waypoint_id, rando_id) =>\n            WaypointList(\n              waypoint_id,\n              rando_id,\n              get_split(rando_id),\n              get_diff(rando_id),\n              get_is_pb(rando_id)\n            )\n          )}\n      </ScrollableFeed>\n    </div>\n  );\n};\n","import React from 'react';\nimport { FormattedTime } from '../FormattedTime/FormattedTime';\nimport { Run, RunState } from '../../lib/run';\n\ntype ToggleTimer = {\n  startedAt: number;\n  pausedAt: number;\n};\n\nexport type RunTimerProps = {\n  run: Run;\n  setPausedTime: Function;\n};\n\nexport const RunTimer = (props: RunTimerProps) => {\n  const { run, setPausedTime } = props;\n  const [toggleTimer, setToggleTimer] = React.useState<ToggleTimer>({\n    startedAt: -1,\n    pausedAt: -1\n  });\n  const [timerDisplay, setTimerDisplay] = React.useState(0);\n\n  const request_ref = React.useRef<number>(-1);\n\n  const update_time = (_time: number) => {\n    if (run.state === RunState.Init) {\n      setTimerDisplay(0);\n      setPausedTime(-1);\n    }\n    if (run.state === RunState.Running) {\n      if (toggleTimer.startedAt === -1) {\n        setToggleTimer(prev => ({ ...prev, startedAt: Date.now() }));\n      }\n      if (toggleTimer.pausedAt !== -1) {\n        setPausedTime(run.pausedTime + Date.now() - toggleTimer.pausedAt);\n        setToggleTimer(prev => ({ ...prev, pausedAt: -1 }));\n      }\n      setTimerDisplay(Date.now() - run.rundate - run.pausedTime);\n    } else if (run.rundate >= 0 && run.state === RunState.Paused) {\n      if (toggleTimer.startedAt !== -1) {\n      }\n      if (toggleTimer.pausedAt === -1) {\n        setToggleTimer(_prev => ({\n          startedAt: -1,\n          pausedAt: Date.now()\n        }));\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (run.rundate <= 0) {\n      setToggleTimer({ startedAt: -1, pausedAt: -1 });\n    }\n  }, [run.rundate]);\n\n  React.useEffect(() => {\n    request_ref.current = requestAnimationFrame(update_time);\n    return () => cancelAnimationFrame(request_ref.current);\n  });\n\n  return <FormattedTime timestamp={timerDisplay} fullFormat={true} />;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Run, RunState } from '../../lib/run';\nimport { getWaypoint } from '../../lib/waypoints';\nimport { RunTimer } from '../RunTimer/RunTimer';\nimport { Typography } from '@material-ui/core';\n\nexport type SplitTimerProps = {\n  run: Run;\n  currentWaypoint: number;\n  onUpdatePausedTime: (paused_time: number) => void;\n};\n\nexport const SplitTimer = (props: SplitTimerProps) => {\n  const { run, currentWaypoint } = props;\n  const waypoint_id = run.waypointIds[currentWaypoint];\n  const current_waypoint = getWaypoint(waypoint_id);\n\n  const [timeclasses, setTimeclasses] = useState(['time']);\n\n  useEffect(() => {\n    const time_classes = ['time'];\n    if (run.state === RunState.Init) time_classes.push('is-initial');\n    if (run.state === RunState.Paused) time_classes.push('is-paused');\n    if (run.state === RunState.Ended) time_classes.push('is-ended');\n    setTimeclasses(time_classes);\n  }, [run.state]);\n\n  const getDetailsProps = () => {\n    if (run.state !== RunState.Ended) {\n      return {\n        counter: currentWaypoint > -1 ? currentWaypoint + 1 : '',\n        name: current_waypoint?.name ? current_waypoint.name : 'Ready to go',\n        desc: current_waypoint?.desc\n          ? current_waypoint.desc\n          : 'Start the timer to reveal the first shrine!'\n      };\n    } else {\n      return {\n        counter: '',\n        name: 'Congratulations!',\n        desc: `You've completed ${run.seed}`\n      };\n    }\n  };\n  return (\n    <div className=\"waypoint current\">\n      <SplitDetails {...getDetailsProps()} />\n      <Typography variant=\"h2\" className={timeclasses.join(' ')}>\n        <RunTimer run={run} setPausedTime={props.onUpdatePausedTime} />\n      </Typography>\n    </div>\n  );\n};\n\nconst SplitDetails = React.memo((props: {\n  counter: String | Number;\n  name: String;\n  desc: String;\n}) => (\n  <>\n    <Typography variant=\"h6\" className=\"counter\">{props.counter}</Typography>\n    <Typography variant=\"h4\" className=\"name\">{props.name}</Typography>\n    <Typography variant=\"h6\" className=\"desc\"> {props.desc} </Typography>\n  </>\n));\n","import React from 'react';\nimport { Run } from '../../lib/run';\nimport { getWaypoint } from '../../lib/waypoints';\nimport { QuickMap } from '../QuickMap/QuickMap';\nimport { SplitHistory } from '../SplitHistory/SplitHistory';\nimport { SplitTimer } from '../SplitTimer/SplitTimer';\n\ntype RunDisplayProps = {\n  run: Run,\n  onUpdatePausedTime: (pausedTime: number) => void\n}\n\nexport function RunDisplay({ run, onUpdatePausedTime }: RunDisplayProps) {\n  return (\n    <div className=\"run-display\">\n      <SplitHistory run={run} />\n      <SplitTimer\n        run={run}\n        currentWaypoint={run.splits.size}\n        onUpdatePausedTime={onUpdatePausedTime}\n      />\n      <QuickMap waypoint={getWaypoint(run.waypointIds[run.splits.size])} />\n    </div>\n  );\n}\n","import { Button, TextField, Typography } from '@material-ui/core';\nimport { Shuffle } from '@material-ui/icons';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport React, { useState } from 'react';\nimport { getRandomSeed } from '../../lib/rando';\nimport { defaultButtonAttrs } from '../App/App';\nimport './SeedPicker.scss';\n\ntype SeedPickerProps = {\n  onPickedSeed: (seed: string) => void;\n};\n\nexport const SeedPicker = (props: SeedPickerProps) => {\n  const exampleValue = 'CHANGEME';\n\n  const [seed, setSeed] = useState(exampleValue);\n\n  const queryParams = new URLSearchParams(window.location.search);\n  if ((!seed || seed === exampleValue) && queryParams.has('seed')) {\n    const querySeed: string | null = queryParams.get('seed');\n    if (querySeed) {\n      setSeed(querySeed);\n    }\n  }\n\n  const handleUpdateSeed = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSeed(event.target.value);\n  };\n\n  const generateSeed = () => {\n    setSeed(getRandomSeed());\n  };\n\n  const handleSelectSeed = (\n    _event: React.SyntheticEvent<HTMLButtonElement>\n  ) => {\n    props.onPickedSeed(seed);\n  };\n\n\n  return (\n    <div className=\"seedpicker\">\n      <Typography variant='h3' className='headerlabel'>Choose your seed!</Typography>\n\n      <Button {...{\n        ...defaultButtonAttrs,\n        'aria-label': 'Randomize seed',\n        id: 'generate-seed',\n        startIcon: <Shuffle />,\n        onClick: generateSeed,\n      }} >\n        Randomize\n      </Button>\n\n\n      <TextField\n        color=\"primary\"\n        className=\"input-seedpicker\"\n        label=\"Seed\"\n        variant=\"outlined\"\n        value={seed}\n        onChange={handleUpdateSeed}\n      />\n\n      <Button {...{\n        ...defaultButtonAttrs,\n        id: 'go-button',\n        onClick: handleSelectSeed,\n        disabled: (!seed),\n        startIcon: <PlayArrow />\n      }}>\n        Start run\n      </Button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport '../../assets/bloodmoon.svg';\nimport { handleKey, registerCallbacks } from '../../lib/keyboard';\nimport { getRandomizedWaypoints } from '../../lib/rando';\nimport { Run, RunState } from '../../lib/run';\nimport { BLOOD_MOON_SHRINE } from '../../lib/waypoints';\nimport { AppFooter } from '../AppFooter/AppFooter';\nimport { AppHeader } from '../AppHeader/AppHeader';\nimport { RunDisplay } from '../RunDisplay/RunDisplay';\nimport { SeedPicker } from '../SeedPicker/SeedPicker';\n\ntype RunManagerProps = {\n  run: Run;\n};\n\ntype BloodMoonState = {\n  isDone: boolean;\n  isActive: boolean;\n};\n\nexport const RunManager = (props: RunManagerProps) => {\n  const [run, setRun] = useState(props.run);\n  const [showHelp, setShowHelp] = useState(false);\n  const [bloodMoonState, setBloodMoonState] = useState<BloodMoonState>({\n    isDone: false,\n    isActive: false\n  });\n\n  const onUpdatePausedTime = (pausedTime: number) => {\n    setRun(prev => ({ ...prev, pausedTime }));\n  };\n\n  const updateSplits = (splits: Map<number, number>) => {\n    setRun(prev => ({ ...prev, splits }));\n  };\n\n  const updateWaypoints = (waypointIds: number[]) => {\n    setRun(prev => ({ ...prev, waypointIds: waypointIds }));\n  };\n\n  const removeBloodMoonShrine = (waypointIds: number[]) => {\n    const toDelete = waypointIds.indexOf(BLOOD_MOON_SHRINE);\n    if (toDelete > -1) {\n      waypointIds.splice(toDelete, 1);\n      updateWaypoints(waypointIds);\n    }\n  }\n\n  const setRunState = (state: RunState) => {\n    setRun(prev => ({ ...prev, state: state }));\n\n    if (state === RunState.Running) {\n      if (run.rundate === -1) {\n        setRun(prev => ({ ...prev, rundate: Date.now() }));\n      }\n    }\n  };\n\n  const addSplit = () => {\n    if (run.state === RunState.Ended) return;\n    if (run.state === RunState.Paused) {\n      setRunState(RunState.Running);\n    }\n    if (run.state === RunState.Init) {\n      setRun(prev => ({ ...prev, rundate: Date.now() }));\n      setRunState(RunState.Running);\n    }\n    if (run.state === RunState.Running) {\n      run.splits.set(\n        run.splits.size,\n        Date.now() - run.rundate - run.pausedTime\n      );\n      updateSplits(run.splits);\n    }\n  };\n\n  const undoSplit = () => {\n    const currentWaypoint = Math.max(0, run.splits.size);\n    const shouldRemoveBloodMoon =\n      run.waypointIds[currentWaypoint] === BLOOD_MOON_SHRINE;\n    if (shouldRemoveBloodMoon) {\n      removeBloodMoonShrine(run.waypointIds);\n    }\n    run.splits.delete(run.splits.size - 1);\n    updateSplits(run.splits);\n  };\n\n  React.useEffect(() => {\n    if (\n      run.state === RunState.None ||\n      run.state === RunState.Init ||\n      run.state === RunState.Paused\n    ) {\n      return;\n    }\n    if (run.rundate && run.splits.size > 0) {\n      setRun(prev => ({ ...prev, state: RunState.Running }));\n    }\n    if (run.rundate && run.splits.size >= run.waypointIds.length) {\n      setRun(prev => ({ ...prev, state: RunState.Ended }));\n    }\n  }, [run.state, run.rundate, run.splits.size, run.waypointIds.length]);\n\n  const skipSplit = () => {\n    if (run.state === RunState.Ended) return;\n    run.splits.set(run.splits.size, -1);\n    updateSplits(run.splits);\n  };\n\n  const resetSplits = () => {\n    removeBloodMoonShrine(run.waypointIds);\n    run.splits.clear();\n    updateSplits(run.splits);\n    setRun(prev => ({ ...prev, pausedTime: 0, rundate: -1 }));\n    setRunState(RunState.Init);\n  };\n\n  const pause = () => setRunState(RunState.Paused);\n\n  const toggleHelp = () => setShowHelp(!showHelp);\n\n  const toggleBloodMoon = () => {\n    const { waypointIds } = run;\n\n    if (bloodMoonState.isDone) {\n      return;\n    }\n    const currentWaypoint = Math.max(0, run.splits.size);\n\n    if (waypointIds[currentWaypoint] === BLOOD_MOON_SHRINE) {\n      waypointIds.splice(currentWaypoint, 1);\n      updateWaypoints(waypointIds);\n    } else {\n      waypointIds.splice(currentWaypoint, 0, BLOOD_MOON_SHRINE);\n      updateWaypoints(waypointIds);\n    }\n  };\n\n  // Blood moon state\n  React.useEffect(() => {\n    const state = {\n      isActive:\n        run.waypointIds[Math.max(0, run.splits.size)] === BLOOD_MOON_SHRINE,\n      isDone: run.splits.has(run.waypointIds.indexOf(BLOOD_MOON_SHRINE))\n    };\n    setBloodMoonState(prev => ({\n      ...prev,\n      ...state\n    }));\n  }, [run, run.splits.size]);\n  React.useEffect(() => {\n    registerCallbacks({\n      addSplit,\n      undoSplit,\n      skipSplit,\n      resetSplits,\n      pause,\n      toggleHelp,\n      toggleBloodMoon\n    });\n  });\n\n  const getClasses = () => {\n    const classes = ['run-manager', 'bg'];\n    if (bloodMoonState.isActive) classes.push('is-blood-moon');\n    return classes.join(' ');\n  };\n\n  const callbacks = {\n    onSplit: (_e: React.SyntheticEvent) => { addSplit() },\n    onUndo: (_e: React.SyntheticEvent) => { undoSplit() },\n    onReset: (_e: React.SyntheticEvent) => { resetSplits() },\n    onPause: (_e: React.SyntheticEvent) => { pause() },\n    onBloodMoon: (_e: React.SyntheticEvent) => { toggleBloodMoon() }\n  };\n\n  const onPickedSeed = (seed: string) => {\n    const waypointIds = getRandomizedWaypoints(seed);\n    setRun(prev => ({ ...prev, seed, waypointIds }));\n    setRunState(RunState.Init);\n  };\n\n  const mainsection = () =>\n    run.state === RunState.None ? (\n      <SeedPicker onPickedSeed={onPickedSeed} />\n    ) : (\n      <RunDisplay run={run} onUpdatePausedTime={onUpdatePausedTime} />\n    );\n\n  return (\n    <div className={getClasses()}>\n      <KeyboardEventHandler handleKeys={['all']} onKeyEvent={handleKey} />\n      <div className=\"main\">\n        <AppHeader seed={run.seed} showSeed={run.showSeed} setRun={setRun} />\n        {mainsection()}\n        <AppFooter\n          run={run}\n          callbacks={callbacks}\n          showHelp={showHelp}\n        />\n      </div>\n    </div>\n  );\n};\n","import { ButtonProps, createMuiTheme, responsiveFontSizes, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport React from 'react';\nimport '../../assets/bloodmoon.svg';\nimport { getDefaultRun, Run } from '../../lib/run';\nimport '../../styles/style.scss';\nimport { RunManager } from '../RunManager/RunManager';\n\n\nlet theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#0C2024',\n    },\n    primary: {\n      main: '#538E24',\n    },\n    secondary: {\n      main: '#3E7531',\n    },\n    text: {\n      primary: '#F9F4CE',\n    }\n  },\n  typography: {\n    fontFamily: [\n      'Open Sans',\n      'Roboto',\n      'sans-serif'\n    ].join(',')\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nexport const defaultButtonAttrs: ButtonProps = {\n  color: 'primary',\n  variant: 'contained',\n  size: 'large',\n};\n\nfunction App() {\n  const run: Run = getDefaultRun();\n  return (\n    <>\n      <link rel=\"preload\" href=\"assets/bloodmoon.svg\" as=\"image\"></link>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <RunManager run={run} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable no-console */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n/* eslint-enable no-console */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
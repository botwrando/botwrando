{"version":3,"sources":["lib/run.ts","lib/keyboard.ts","lib/utils.ts","lib/shrines.ts","lib/rando.ts","components/AppHeader/AppHeader.tsx","components/HotkeyList/HotkeyList.tsx","components/Help/Help.tsx","components/AppFooter/AppFooter.tsx","components/SeedInfo/SeedInfo.tsx","components/SeedPicker/SeedPicker.tsx","lib/time.ts","components/FormattedTime/FormattedTime.tsx","components/ShrineInfo/ShrineInfo.tsx","components/SplitHistory/SplitHistory.tsx","components/RunTimer/RunTimer.tsx","components/SplitTimer/SplitTimer.tsx","components/QuickMap/QuickMap.tsx","components/RunDisplay/RunDisplay.tsx","components/RunManager/RunManager.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["RunState","bindings","addSplit","desc","undoSplit","skipSplit","resetSplits","pause","toggleHelp","toggleBloodMoon","registerCallbacks","map","Object","entries","forEach","value","key","fn","callback","keyboardProfile","Space","Backspace","Period","KeyR","KeyP","KeyH","KeyB","Numpad1","Numpad8","Numpad2","Numpad3","Numpad5","NumpadAdd","NumpadSubtract","NumpadDivide","KeyQ","NumpadMultiply","F1","F4","F5","F3","F6","getProfile","parseKeypress","code","effect","handleKey","_key","event","re_shortkeynames","re_shortnumpadnames","stringsubst","Add","Subtract","Divide","Multiply","getKeyMap","keys","list","keyGetter","Map","item","collection","get","push","set","groupBy","getShrine","shrine_id","shrines","find","index","PLATEAU_SHRINES","range","bound","limit","start","end","base","Array","from","idx","getRandomizedShrines","seed","normalShrines","filter","id","indexOf","shuffle","eventideSlot","splice","AppHeader","setRun","className","onClick","state","None","runner","rundate","pausedTime","shrineIds","splits","wrSplits","pbSplits","HotkeyList","_props","key_names","toString","keyname","outstr","search","replace","alphanum_matches","exec","length","numpad_matches","getShortKeyname","MobileControls","props","onSplit","onUndo","onPause","onReset","onBloodMoon","DesktopHelp","run","showHelp","Instructions","AppFooter","touchCallbacks","isTouch","window","matchMedia","matches","SeedInfo","SeedPicker","useState","setSeed","htmlFor","type","defaultValue","onChange","target","_event","onPickedSeed","trunc","ts","Math","floor","pad","zpad","out","substr","max","getTimestamp","tsMagn","abs","h","m","s","ms","FormattedTime","p","timestamp","fullFormat","plusSign","emptyLabel","posSign","Number","NEGATIVE_INFINITY","sign","smartFormat","ShrineInfo","current_shrine","diffProps","diff","plus_sign","empty_label","diff_ts","diff_classes","is_ahead","is_pb","counter","name","join","SplitHistory","forceScroll","rando_id","has_split","ShrineList","split","get_split","curr_split","other_split","get_diff","pb_split","get_is_pb","RunTimer","runstate","setPausedTime","React","startedAt","pausedAt","toggleTimer","setToggleTimer","timerDisplay","setTimerDisplay","request_ref","useRef","update_time","_time","Init","Running","prev","Date","now","Paused","_prev","useEffect","current","requestAnimationFrame","cancelAnimationFrame","SplitTimer","currentShrine","timeclasses","setTimeclasses","time_classes","Ended","onUpdatePausedTime","SplitDetails","QuickMap","shrine","bgClasses","RunDisplay","size","RunManager","setShowHelp","isDone","isActive","bloodMoonState","setBloodMoonState","updateSplits","updateShrines","setRunState","delete","clear","has","classes","getClasses","handleKeys","onKeyEvent","App","rel","href","as","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b514e04.chunk.js","sourcesContent":["export enum RunState {\r\n\tNone,\r\n\tInit,\r\n\tRunning,\r\n\tPaused,\r\n\tEnded\r\n}\r\n\r\nexport type Run = {\r\n\tstate: RunState;\r\n\trunner: string;\r\n\trundate: number;\r\n\tpausedTime: number;\r\n\tseed: string;\r\n\tshrineIds: number[];\r\n\tsplits: Map<number, number>;\r\n\twrSplits: Map<number, number>;\r\n\tpbSplits: Map<number, number>;\r\n};\r\n\r\nexport const getDefaultRun = () => ({\r\n  state: RunState.None,\r\n  runner: 'Default Runner',\r\n  rundate: -1,\r\n  pausedTime: -1,\r\n  seed: '',\r\n  shrineIds: [],\r\n  splits: new Map<number, number>([]),\r\n  wrSplits: new Map<number, number>([]),\r\n  pbSplits: new Map<number, number>([]),\r\n});\r\n","import { groupBy } from './utils';\r\n\r\nexport type Effect =\r\n\t| 'addSplit'\r\n\t| 'undoSplit'\r\n\t| 'skipSplit'\r\n\t| 'resetSplits'\r\n\t| 'pause'\r\n\t| 'toggleHelp'\r\n\t| 'toggleBloodMoon';\r\n\r\nexport type FunctionMap = {\r\n\t[key in Effect]: Function;\r\n};\r\n\r\nexport type Binding = {\r\n\tdesc: string;\r\n\tcallback?: Function;\r\n};\r\n\r\nexport type BindingMap = {\r\n\t[key: string]: Binding;\r\n};\r\n\r\nexport let bindings: BindingMap = {\r\n  addSplit: { desc: 'Start the run / add a split' },\r\n  undoSplit: { desc: 'Undo last split' },\r\n  skipSplit: { desc: 'Skip a split' },\r\n  resetSplits: { desc: 'Reset the run' },\r\n  pause: { desc: 'Pause the timer' },\r\n  toggleHelp: { desc: 'Show / hide help' },\r\n  toggleBloodMoon: { desc: 'Toggle Blood Moon shrine' }\r\n};\r\n\r\nexport const registerCallbacks = (map: FunctionMap) => {\r\n  Object.entries(map).forEach(value => {\r\n    const [key, fn] = value;\r\n    bindings[key].callback = fn;\r\n  });\r\n};\r\n\r\ntype Profile = { [key: string]: Effect };\r\n\r\nconst profileTeetow: Profile = {\r\n  Space: 'addSplit',\r\n  Backspace: 'undoSplit',\r\n  Period: 'skipSplit',\r\n  KeyR: 'resetSplits',\r\n  KeyP: 'pause',\r\n  KeyH: 'toggleHelp',\r\n  KeyB: 'toggleBloodMoon'\r\n};\r\n\r\nconst profileLivesplit: Profile = {\r\n  Numpad1: 'addSplit',\r\n  Numpad8: 'undoSplit',\r\n  Numpad2: 'skipSplit',\r\n  Numpad3: 'resetSplits',\r\n  Numpad5: 'pause'\r\n};\r\n\r\nconst profileSpecs: Profile = {\r\n  NumpadAdd: 'addSplit',\r\n  NumpadSubtract: 'undoSplit',\r\n  NumpadDivide: 'skipSplit',\r\n  KeyQ: 'resetSplits',\r\n  NumpadMultiply: 'pause'\r\n};\r\n\r\nconst profileDj: Profile = {\r\n  F1: 'addSplit',\r\n  F4: 'undoSplit',\r\n  F5: 'skipSplit',\r\n  F3: 'resetSplits',\r\n  F6: 'pause'\r\n};\r\n\r\nconst keyboardProfile: Profile = {\r\n  ...profileTeetow,\r\n  ...profileLivesplit,\r\n  ...profileSpecs,\r\n  ...profileDj\r\n};\r\n\r\nexport const getProfile = () => keyboardProfile;\r\n\r\nexport const parseKeypress = (code: string): Function | undefined => {\r\n  let effect = keyboardProfile[code];\r\n  return bindings[effect]?.callback;\r\n};\r\n\r\nexport const handleKey = (_key: string, event: KeyboardEvent) => {\r\n  const callback = parseKeypress(event.code);\r\n  if (callback) callback();\r\n};\r\n\r\nconst re_shortkeynames = /Key(.+)/;\r\nconst re_shortnumpadnames = /Numpad(.+)/;\r\nconst stringsubst: any = {\r\n  Add: '+',\r\n  Subtract: '-',\r\n  Divide: '/',\r\n  Multiply: '*',\r\n  Period: '.'\r\n};\r\n\r\nexport const getShortKeyname = (keyname: string) => {\r\n  let outstr = keyname;\r\n\r\n  Object.entries(stringsubst).forEach(value => {\r\n    const [search, replace] = value;\r\n    outstr = outstr.replace(search, replace as string);\r\n  });\r\n\r\n  const alphanum_matches = re_shortkeynames.exec(outstr);\r\n  if (alphanum_matches && alphanum_matches.length > 0) {\r\n    return alphanum_matches[1];\r\n  }\r\n\r\n  const numpad_matches = re_shortnumpadnames.exec(outstr);\r\n  if (numpad_matches && numpad_matches.length > 0) {\r\n    let [,outstr] = numpad_matches;\r\n    return `Num ${outstr}`;\r\n  }\r\n\r\n  return outstr;\r\n};\r\n\r\nexport const getKeyMap = () => {\r\n  const keys = getProfile();\r\n  const grouped = groupBy(Object.entries(keys), (value: [string, Effect]) => {\r\n    const [, effect] = value;\r\n    return bindings[effect].desc;\r\n  });\r\n  return grouped;\r\n};\r\n\r\nexport default {\r\n  bindings,\r\n  registerCallbacks,\r\n  getKeyMap,\r\n  getProfile,\r\n  parseKeypress,\r\n  handleKey\r\n};\r\n","export function groupBy (list: any, keyGetter: any) {\r\n  const map = new Map();\r\n  list.forEach((item: any) => {\r\n    const key = keyGetter(item);\r\n    const collection = map.get(key);\r\n    if (!collection) {\r\n      map.set(key, [item]);\r\n    } else {\r\n      collection.push(item);\r\n    }\r\n  });\r\n  return map;\r\n}\r\n\r\nexport function throttle (func: Function, limit: number): Function {\r\n  let inThrottle: boolean;\r\n\r\n  return function (this: any): any {\r\n    const args = arguments;\r\n    const context = this;\r\n\r\n    if (!inThrottle) {\r\n      inThrottle = true;\r\n      func.apply(context, args);\r\n      setTimeout(() => (inThrottle = false), limit);\r\n    }\r\n  };\r\n}\r\n","import shrines from '../data/shrines.json'\r\n\r\nexport type Location = {\r\n\tx: String;\r\n\ty: String;\r\n\tz: String;\r\n};\r\n\r\nexport type Shrine = {\r\n\tindex: Number;\r\n\tname: String | null;\r\n\tdesc: String | null;\r\n\tregion: String | null;\r\n\tlocation: Location;\r\n\tisBloodMoon: Boolean;\r\n\tisPlateau: Boolean;\r\n};\r\n\r\nexport const getShrine = (shrine_id: number): Shrine | undefined =>\r\n  shrines.find(item => item.index === shrine_id);\r\n\r\nexport const PLATEAU_SHRINES: number[] = [38, 41, 9, 65];\r\nexport const BLOOD_MOON_SHRINE: number = 78;\r\nexport const EVENTIDE_SHRINE: number = 97;\r\n\r\nexport const isNormalShrine = (id: number): Boolean => {\r\n  return (\r\n    PLATEAU_SHRINES.indexOf(id) === -1 &&\r\n\t\tBLOOD_MOON_SHRINE !== id && EVENTIDE_SHRINE !== id\r\n  );\r\n};\r\n","import { shuffle } from 'shuffle-seed';\r\nimport { PLATEAU_SHRINES, EVENTIDE_SHRINE, isNormalShrine } from './shrines';\r\n\r\nexport function range (bound: number, limit: number = 0): number[] {\r\n  const start = limit ? bound : 0;\r\n  const end = limit ? limit : bound;\r\n  const base = [...Array.from(Array(end - start + 1).keys())];\r\n  return base.map((idx: number) => start + idx);\r\n}\r\n\r\nexport function getRandomSeed (): string {\r\n  const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\r\n  let a;\r\n  for (a = ''; a.length < 40;) { a += chars[(Math.random() * 60) | 0]; }\r\n  return a;\r\n}\r\n\r\nexport function getRandomizedShrines (seed: string): number[] {\r\n  const normalShrines = range(119).filter(item => isNormalShrine(item));\r\n  const [eventideSlot,] = shuffle(range(80, 118), seed);\r\n\r\n  const shrines: number[] = [];\r\n  shrines.push(...shuffle(PLATEAU_SHRINES, seed));\r\n  shrines.push(...shuffle(normalShrines, seed));\r\n  shrines.splice(eventideSlot, 0, EVENTIDE_SHRINE);\r\n\r\n  return shrines;\r\n}\r\n","import React from 'react';\r\nimport { Run, getDefaultRun } from '../../lib/run';\r\n\r\ntype AppHeaderProps = {\r\n  setRun: (run: Run) => void;\r\n}\r\n\r\nexport function AppHeader ({ setRun }: AppHeaderProps) {\r\n  const onQuit = () => setRun(getDefaultRun());\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"caption\">BotW All Shrines Randomizer</div>\r\n      <button className=\"btn-text btn-back\" onClick={onQuit}>\r\n        Quit run\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './HotkeyList.scss';\r\nimport { getKeyMap, getShortKeyname } from '../../lib/keyboard';\r\n\r\nexport type HotkeyListProps = {};\r\n\r\nexport const HotkeyList = (_props: HotkeyListProps) => {\r\n  const map = getKeyMap();\r\n  return (\r\n    <>\r\n      {Array.from(map).map((value: [string, Function[][]]) => {\r\n        const [desc, keys] = value;\r\n\r\n        const key_names = keys.map(key => key[0]);\r\n        return (\r\n          <div className=\"hotkey\" key={keys.toString()}>\r\n            <div className=\"keys\">\r\n              {' '}\r\n              {key_names.map(key => (\r\n                <div className=\"key\" key={key.toString()}>\r\n                  {getShortKeyname(key.toString())}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"desc\">{desc}</div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { HotkeyList } from '../HotkeyList/HotkeyList';\r\nimport { Run } from '../../lib/run';\r\n\r\ntype MobileProps = {\r\n\trun: Run;\r\n\tonSplit: (event: React.MouseEvent) => void;\r\n\tonUndo: (event: React.MouseEvent) => void;\r\n\tonReset: (event: React.MouseEvent) => void;\r\n\tonPause: (event: React.MouseEvent) => void;\r\n\tonBloodMoon: (event: React.MouseEvent) => void;\r\n};\r\n\r\nexport const MobileControls = (props: MobileProps) => {\r\n  return (\r\n    <div className=\"touchpanel\">\r\n      <button className=\"split\" onClick={props.onSplit}>\r\n\t\t\t\tSplit\r\n      </button>\r\n      <button className=\"undo\" onClick={props.onUndo}>\r\n\t\t\t\tUndo\r\n      </button>\r\n      <button className=\"pause\" onClick={props.onPause}>\r\n\t\t\t\tPause\r\n      </button>\r\n      <button className=\"reset\" onClick={props.onReset}>\r\n\t\t\t\tReset\r\n      </button>\r\n      <button className=\"bloodmoon\" onClick={props.onBloodMoon}>\r\n\t\t\t\tBlood Moon\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype DesktopProps = {\r\n\trun: Run;\r\n\tshowHelp: boolean;\r\n};\r\n\r\nexport const DesktopHelp = (props: DesktopProps) => {\r\n  const { run, showHelp } = props;\r\n  return (\r\n    <div className={`help ${showHelp ? 'is-visible' : ''}`}>\r\n      {!showHelp && (\r\n        <>\r\n          <div className=\"helphint\">\r\n            <span className=\"key\">Space</span> to start / split\r\n\t\t\t\t\t\t&nbsp;\r\n            <span className=\"key\">H</span> to show / hide help\r\n          </div>\r\n        </>\r\n      )}\r\n      {showHelp && (\r\n        <>\r\n          <div className=\"instructions\">\r\n            <Instructions run={run} />\r\n          </div>\r\n          <div className=\"hotkeys\">\r\n            <HotkeyList />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Instructions = (props: { run: Run }) => {\r\n  const { run } = props;\r\n  return (\r\n    <>\r\n      <p>\r\n\t\t\t\tAll shrines except the Blood Moon shrine has been shuffled using\r\n\t\t\t\tthe seed {run.seed}.\r\n      </p>\r\n      <p>\r\n\t\t\t\tHit <span className=\"key\">B</span> to insert a Blood Moon shrine\r\n\t\t\t\tsplit.\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Run } from '../../lib/run';\r\nimport { DesktopHelp, MobileControls } from '../Help/Help';\r\n\r\nexport type AppFooterProps = {\r\n  run: Run,\r\n  touchCallbacks: {\r\n    onSplit: (event: React.MouseEvent) => void\r\n    onUndo: (event: React.MouseEvent) => void\r\n    onReset: (event: React.MouseEvent) => void\r\n    onPause: (event: React.MouseEvent) => void\r\n    onBloodMoon: (event: React.MouseEvent) => void\r\n  },\r\n  showHelp: boolean\r\n}\r\n\r\nexport function AppFooter ({ run, touchCallbacks, showHelp }: AppFooterProps) {\r\n  const isTouch = window.matchMedia('(pointer: coarse)').matches;\r\n  return (\r\n    <div className=\"footer\">\r\n      {isTouch?(\r\n        <MobileControls\r\n          run = { run }\r\n          onSplit = { touchCallbacks.onSplit }\r\n          onUndo = { touchCallbacks.onUndo }\r\n          onReset = { touchCallbacks.onReset }\r\n          onPause = { touchCallbacks.onPause }\r\n          onBloodMoon = { touchCallbacks.onBloodMoon }\r\n        />\r\n      ): (\r\n        <DesktopHelp run = { run } showHelp = { showHelp } />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Run } from '../../lib/run';\r\n\r\nexport type SeedInfoProps = {\r\n  run: Run\r\n}\r\n\r\nexport function SeedInfo ({ run }: SeedInfoProps) {\r\n  return (\r\n    <div className=\"seedinfo\">\r\n      { run.seed ? (<div className=\"seed\">Seed: {run.seed}</div>) : <></>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { ChangeEvent, useState } from 'react';\r\n\r\ntype SeedPickerProps = {\r\n\tonPickedSeed: (seed: string) => void;\r\n};\r\n\r\nexport const SeedPicker = (props: SeedPickerProps) => {\r\n  const exampleValue = 'CHANGEME';\r\n\r\n  const [seed, setSeed] = useState(exampleValue);\r\n\r\n  const handleUpdateSeed = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSeed(event.target.value);\r\n  };\r\n\r\n  const handleSelectSeed = (\r\n    _event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    props.onPickedSeed(seed);\r\n  };\r\n\r\n  return (\r\n    <div className=\"seedpicker\">\r\n      <label htmlFor=\"input-seedpicker\">Type in a seed!</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"input-seedpicker\"\r\n        defaultValue={exampleValue}\r\n        onChange={handleUpdateSeed}\r\n      />\r\n      <button onClick={handleSelectSeed}>Go!</button>\r\n    </div>\r\n  );\r\n};\r\n","const HOUR_THRES = 1000 * 60 * 60;\r\nconst MINUTE_THRES = 1000 * 60;\r\n\r\nexport type Timestamp = {\r\n  sign?: string;\r\n  h?: string;\r\n  m?: string;\r\n  s?: string;\r\n  ms?: string;\r\n};\r\n\r\nexport const trunc = (ts: number) => {\r\n  if (ts < 10) {\r\n    return 0;\r\n  }\r\n  return Math.floor(ts / 10);\r\n};\r\n\r\nexport const pad = (ts: number, zpad: number = 2) => {\r\n  let out = ts.toString();\r\n  while (out.length < zpad) {\r\n    out = '0' + out;\r\n  }\r\n  return out.substr(0, (zpad > 0 ? Math.max(zpad, out.length) : out.length));\r\n};\r\n\r\nexport const getTimestamp = (ts: number): Timestamp => {\r\n  let tsMagn: number = Math.abs(ts);\r\n  const h = Math.floor(tsMagn / HOUR_THRES);\r\n  tsMagn -= h * HOUR_THRES;\r\n  const m = Math.floor(tsMagn / MINUTE_THRES);\r\n  tsMagn -= m * MINUTE_THRES;\r\n  const s = Math.floor(tsMagn / 1000);\r\n  tsMagn -= s * 1000;\r\n  const ms = tsMagn;\r\n  return { h: pad(h), m: pad(m), s: pad(s), ms: pad(trunc(ms)) };\r\n};\r\n\r\nexport const smartFormat = (\r\n  timestamp: number,\r\n  fullFormat: boolean,\r\n  posSign: string = '',\r\n): Timestamp => {\r\n  if (timestamp === Number.NEGATIVE_INFINITY) {\r\n    return {}\r\n  }\r\n  const sign = timestamp >= 0 ? posSign : '-';\r\n  const { h, m, s, ms } = getTimestamp(timestamp);\r\n\r\n  let out = {};\r\n\r\n  if (Math.abs(timestamp) >= HOUR_THRES)\r\n    out = fullFormat ? { h, m, s, ms } : { h, m, s };\r\n  else if (Math.abs(timestamp) >= MINUTE_THRES)\r\n    out = fullFormat ? { m, s, ms } : { m, s };\r\n  else\r\n    out = { s, ms };\r\n  out = { ...out, sign };\r\n\r\n  return out;\r\n};\r\n","import React from 'react';\r\nimport { smartFormat } from '../../lib/time';\r\n\r\nexport type FormattedTimeProps = {\r\n  timestamp?: number;\r\n  fullFormat?: boolean;\r\n  plusSign?: string;\r\n  emptyLabel?: string;\r\n};\r\n\r\nexport const FormattedTime = (props: FormattedTimeProps) => {\r\n  const p = {\r\n    timestamp: 0,\r\n    fullFormat: false,\r\n    plusSign: '',\r\n    emptyLabel: '--:--',\r\n    ...props\r\n  }\r\n  const { sign, h, m, s, ms } = smartFormat(p.timestamp, p.fullFormat);\r\n  return (\r\n    <>\r\n      {sign && (<><span className=\"sign\">{sign}</span>:</>)}\r\n      {h && (<><span className=\"h\">{h}</span>:</>)}\r\n      {m && (<><span className=\"m\">{m}</span>:</>)}\r\n      {s && (<><span className=\"s\">{s}</span></>)}\r\n      {ms && (<><span className=\"ms\">.{ms}</span></>)}\r\n      {(!h && !m && !s && !ms) && (<span className=\"empty\">{p.emptyLabel}</span>)}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { FormattedTime } from '../FormattedTime/FormattedTime';\r\nimport './ShrineInfo.scss';\r\nimport { getShrine } from '../../lib/shrines';\r\n\r\nexport type ShrineInfoProps = {\r\n\tcounter: number;\r\n\tshrine_id: number;\r\n\ttimestamp: number;\r\n\tis_main?: boolean;\r\n\tdiff?: number;\r\n\tis_ahead?: boolean;\r\n\tis_pb?: boolean;\r\n};\r\n\r\nexport const ShrineInfo = (props: ShrineInfoProps) => {\r\n  const current_shrine = getShrine(props.shrine_id);\r\n\r\n  const diffProps = {\r\n    timestamp: props.diff,\r\n    plus_sign: '+',\r\n    empty_label: '--'\r\n  };\r\n  const diff_ts = props.diff ? <FormattedTime {...diffProps} /> : '';\r\n  const ts = <FormattedTime timestamp={props.timestamp} />;\r\n\r\n  const diff_classes = ['diff'];\r\n  if (props.is_ahead) diff_classes.push('is-ahead');\r\n  if (props.is_pb) diff_classes.push('is-pb');\r\n\r\n  return (\r\n    <div className=\"shrine infolog\">\r\n      <div className=\"counter\">{props.counter + 1}</div>\r\n      <div className=\"name\">{current_shrine?.name}</div>\r\n      <div className={diff_classes.join(' ')}>{diff_ts}</div>\r\n      <div className=\"time\">{ts}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ScrollableFeed from 'react-scrollable-feed';\r\nimport { Run } from '../../lib/run';\r\nimport { ShrineInfo } from '../ShrineInfo/ShrineInfo';\r\n\r\nconst ShrineList = (\r\n  shrine_id: number,\r\n  rando_id: number,\r\n  timestamp: number,\r\n  diff: number,\r\n  is_pb: boolean\r\n) => (\r\n  <ShrineInfo\r\n    key={shrine_id}\r\n    shrine_id={shrine_id}\r\n    counter={rando_id}\r\n    timestamp={timestamp}\r\n    diff={diff}\r\n    is_ahead={diff <= 0}\r\n    is_pb={is_pb}\r\n  />\r\n);\r\n\r\nexport type SplitHistoryProps = {\r\n  run: Run;\r\n};\r\n\r\nexport const SplitHistory = (props: SplitHistoryProps) => {\r\n  const { run } = props;\r\n\r\n  const has_split = (rando_id: number) => run.splits.get(rando_id);\r\n\r\n  const get_split = (rando_id: number) => {\r\n    const split = run.splits.get(rando_id);\r\n    return split ? split : Number.NEGATIVE_INFINITY;\r\n  };\r\n\r\n  const get_diff = (rando_id: number): number => {\r\n    const curr_split = run.splits.get(rando_id);\r\n    const other_split = run.wrSplits.get(rando_id);\r\n    if (curr_split && other_split) return curr_split - other_split;\r\n\r\n    return Number.NEGATIVE_INFINITY;\r\n  };\r\n\r\n  const get_is_pb = (rando_id: number) => {\r\n    const curr_split = run.splits.get(rando_id);\r\n    const pb_split = run.pbSplits.get(rando_id);\r\n    if (curr_split && pb_split) return curr_split - pb_split < 0;\r\n\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"history\">\r\n      <ScrollableFeed forceScroll={true} className=\"historylist\">\r\n        {run.shrineIds\r\n          .filter((shrine_id, rando_id) => has_split(rando_id))\r\n          .map((shrine_id, rando_id) =>\r\n            ShrineList(\r\n              shrine_id,\r\n              rando_id,\r\n              get_split(rando_id),\r\n              get_diff(rando_id),\r\n              get_is_pb(rando_id)\r\n            )\r\n          )}\r\n      </ScrollableFeed>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { FormattedTime } from '../FormattedTime/FormattedTime';\r\nimport { RunState } from '../../lib/run';\r\n\r\ntype ToggleTimer = {\r\n  startedAt: number;\r\n  pausedAt: number;\r\n};\r\n\r\nexport type RunTimerProps = {\r\n  timestamp: number;\r\n  runstate: RunState;\r\n  pausedTime: number;\r\n  setPausedTime: Function;\r\n};\r\n\r\nexport const RunTimer = (props: RunTimerProps) => {\r\n  const { timestamp, runstate, pausedTime, setPausedTime } = props;\r\n  const [toggleTimer, setToggleTimer] = React.useState<ToggleTimer>({\r\n    startedAt: -1,\r\n    pausedAt: -1\r\n  });\r\n  const [timerDisplay, setTimerDisplay] = React.useState(0);\r\n\r\n  const request_ref = React.useRef<number>(-1);\r\n\r\n  const update_time = (_time: number) => {\r\n    if (runstate === RunState.Init) {\r\n      setTimerDisplay(0);\r\n      setPausedTime(-1);\r\n    }\r\n    if (runstate === RunState.Running) {\r\n      if (toggleTimer.startedAt === -1) {\r\n        setToggleTimer(prev => ({ ...prev, startedAt: Date.now() }));\r\n      }\r\n      if (toggleTimer.pausedAt !== -1) {\r\n        setPausedTime(pausedTime + Date.now() - toggleTimer.pausedAt);\r\n        setToggleTimer(prev => ({ ...prev, pausedAt: -1 }));\r\n      }\r\n      setTimerDisplay(Date.now() - timestamp - pausedTime);\r\n    } else if (runstate === RunState.Paused) {\r\n      if (toggleTimer.startedAt !== -1) {\r\n      }\r\n      if (toggleTimer.pausedAt === -1) {\r\n        setToggleTimer(_prev => ({\r\n          startedAt: -1,\r\n          pausedAt: Date.now()\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    request_ref.current = requestAnimationFrame(update_time);\r\n    return () => cancelAnimationFrame(request_ref.current);\r\n  });\r\n\r\n  return <FormattedTime timestamp={timerDisplay} fullFormat={true} />;\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Run, RunState } from '../../lib/run';\r\nimport { RunTimer } from '../RunTimer/RunTimer';\r\nimport { getShrine } from '../../lib/shrines';\r\n\r\nexport type SplitTimerProps = {\r\n  run: Run;\r\n  currentShrine: number;\r\n  onUpdatePausedTime: (paused_time: number) => void;\r\n};\r\n\r\nexport const SplitTimer = (props: SplitTimerProps) => {\r\n  const { run, currentShrine } = props;\r\n  const shrine_id = run.shrineIds[currentShrine];\r\n  const current_shrine = getShrine(shrine_id);\r\n\r\n  const [timeclasses, setTimeclasses] = useState(['time']);\r\n\r\n  useEffect(() => {\r\n    const time_classes = ['time'];\r\n    if (run.state === RunState.Init) time_classes.push('is-initial');\r\n    if (run.state === RunState.Paused) time_classes.push('is-paused');\r\n    if (run.state === RunState.Ended) time_classes.push('is-ended');\r\n    setTimeclasses(time_classes);\r\n  }, [run.state]);\r\n\r\n  const getDetailsProps = () => {\r\n    if (run.state !== RunState.Ended) {\r\n      return {\r\n        counter: currentShrine > -1 ? currentShrine + 1 : '',\r\n        name: current_shrine?.name ? current_shrine.name : 'Ready to go',\r\n        desc: current_shrine?.desc\r\n          ? current_shrine.desc\r\n          : 'Start the timer to reveal the first shrine!'\r\n      };\r\n    } else {\r\n      return {\r\n        counter: '',\r\n        name: 'Congratulations!',\r\n        desc: `You've completed ${run.seed}`\r\n      };\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"shrine current\">\r\n      <SplitDetails {...getDetailsProps()} />\r\n      <div className={timeclasses.join(' ')}>\r\n        <RunTimer\r\n          timestamp={run.rundate}\r\n          runstate={run.state}\r\n          pausedTime={run.pausedTime}\r\n          setPausedTime={props.onUpdatePausedTime}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SplitDetails = (props: {\r\n  counter: String | Number;\r\n  name: String;\r\n  desc: String;\r\n}) => (\r\n  <>\r\n    <div className=\"counter\">{props.counter}</div>\r\n    <div className=\"name\">{props.name}</div>\r\n    <div className=\"desc\"> {props.desc} </div>\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport { Shrine } from '../../lib/shrines';\r\nimport '../WorldMap/WorldMap.scss';\r\nexport type QuickMapProps = {\r\n\tshrine?: Shrine;\r\n};\r\n\r\nexport const QuickMap = (props: QuickMapProps) => {\r\n  const { shrine } = props;\r\n  if (!shrine) {\r\n    return <></>;\r\n  }\r\n  const bgClasses = ['mapwrapper'];\r\n  if (shrine) bgClasses.push(`bg-${shrine.index}`);\r\n  return (\r\n    <div className=\"worldmap\">\r\n      <div className={bgClasses.join(' ')}></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Run } from '../../lib/run';\r\nimport { getShrine } from '../../lib/shrines';\r\nimport { SplitHistory } from '../SplitHistory/SplitHistory';\r\nimport { SplitTimer } from '../SplitTimer/SplitTimer';\r\nimport { QuickMap } from '../QuickMap/QuickMap';\r\n\r\ntype RunDisplayProps = {\r\n  run: Run,\r\n  onUpdatePausedTime: (pausedTime: number) => void\r\n}\r\n\r\nexport function RunDisplay ({ run, onUpdatePausedTime }: RunDisplayProps) {\r\n  return (\r\n    <div className=\"run-display\">\r\n      <SplitHistory run={run} />\r\n      <SplitTimer\r\n        run={run}\r\n        currentShrine={run.splits.size}\r\n        onUpdatePausedTime={onUpdatePausedTime}\r\n      />\r\n      <QuickMap shrine={getShrine(run.shrineIds[run.splits.size])} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\nimport '../../assets/bloodmoon.svg';\r\nimport { handleKey, registerCallbacks } from '../../lib/keyboard';\r\nimport { getRandomizedShrines } from '../../lib/rando';\r\nimport { Run, RunState } from '../../lib/run';\r\nimport { AppHeader } from '../AppHeader/AppHeader';\r\nimport { AppFooter } from '../AppFooter/AppFooter';\r\nimport { SeedInfo } from '../SeedInfo/SeedInfo';\r\nimport { SeedPicker } from '../SeedPicker/SeedPicker';\r\nimport { BLOOD_MOON_SHRINE } from '../../lib/shrines';\r\nimport { RunDisplay } from '../RunDisplay/RunDisplay';\r\n\r\ntype RunManagerProps = {\r\n  run: Run;\r\n};\r\n\r\ntype BloodMoonState = {\r\n  isDone: boolean;\r\n  isActive: boolean;\r\n};\r\n\r\nexport const RunManager = (props: RunManagerProps) => {\r\n  const [run, setRun] = useState(props.run);\r\n  const [showHelp, setShowHelp] = useState(false);\r\n  const [bloodMoonState, setBloodMoonState] = useState<BloodMoonState>({\r\n    isDone: false,\r\n    isActive: false\r\n  });\r\n\r\n  const onUpdatePausedTime = (pausedTime: number) => {\r\n    setRun(prev => ({ ...prev, pausedTime }));\r\n  };\r\n\r\n  const updateSplits = (splits: Map<number, number>) => {\r\n    setRun(prev => ({ ...prev, splits }));\r\n  };\r\n\r\n  const updateShrines = (shrineIds: number[]) => {\r\n    setRun(prev => ({ ...prev, shrineIds }));\r\n  };\r\n\r\n  const setRunState = (state: RunState) => {\r\n    setRun(prev => ({ ...prev, state: state }));\r\n\r\n    if (state === RunState.Running) {\r\n      if (run.rundate === -1) {\r\n        setRun(prev => ({ ...prev, rundate: Date.now() }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const addSplit = () => {\r\n    if (run.state === RunState.Ended) return;\r\n    if (run.state === RunState.Paused) {\r\n      setRunState(RunState.Running);\r\n    }\r\n    if (run.state === RunState.Init) {\r\n      setRun(prev => ({ ...prev, rundate: Date.now() }));\r\n      setRunState(RunState.Running);\r\n    }\r\n    if (run.state === RunState.Running) {\r\n      run.splits.set(\r\n        run.splits.size,\r\n        Date.now() - run.rundate - run.pausedTime\r\n      );\r\n      updateSplits(run.splits);\r\n    }\r\n  };\r\n\r\n  const undoSplit = () => {\r\n    run.splits.delete(run.splits.size - 1);\r\n    updateSplits(run.splits);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      run.state === RunState.None ||\r\n      run.state === RunState.Init ||\r\n      run.state === RunState.Paused\r\n    ) {\r\n      return;\r\n    }\r\n    if (run.rundate && run.splits.size > 0) {\r\n      setRun(prev => ({ ...prev, state: RunState.Running }));\r\n    }\r\n    if (run.rundate && run.splits.size >= run.shrineIds.length) {\r\n      setRun(prev => ({ ...prev, state: RunState.Ended }));\r\n    }\r\n  }, [run.state, run.rundate, run.splits.size, run.shrineIds.length]);\r\n\r\n  const skipSplit = () => {\r\n    if (run.state === RunState.Ended) return;\r\n    run.splits.set(run.splits.size, -1);\r\n    updateSplits(run.splits);\r\n  };\r\n\r\n  const resetSplits = () => {\r\n    run.splits.clear();\r\n    updateSplits(run.splits);\r\n    setRun(prev => ({ ...prev, pausedTime: 0, rundate: -1 }));\r\n    setRunState(RunState.Init);\r\n  };\r\n\r\n  const pause = () => setRunState(RunState.Paused);\r\n\r\n  const toggleHelp = () => setShowHelp(!showHelp);\r\n\r\n  const toggleBloodMoon = () => {\r\n    const { shrineIds } = run;\r\n\r\n    if (bloodMoonState.isDone) {\r\n      return;\r\n    }\r\n    const currentShrine = Math.max(0, run.splits.size);\r\n\r\n    if (shrineIds[currentShrine] === BLOOD_MOON_SHRINE) {\r\n      shrineIds.splice(currentShrine, 1);\r\n      updateShrines(shrineIds);\r\n    } else {\r\n      shrineIds.splice(currentShrine, 0, BLOOD_MOON_SHRINE);\r\n      updateShrines(shrineIds);\r\n    }\r\n  };\r\n\r\n  // Blood moon state\r\n  React.useEffect(() => {\r\n    const state = {\r\n      isActive:\r\n        run.shrineIds[Math.max(0, run.splits.size)] === BLOOD_MOON_SHRINE,\r\n      isDone: run.splits.has(run.shrineIds.indexOf(BLOOD_MOON_SHRINE))\r\n    };\r\n    setBloodMoonState(prev => ({\r\n      ...prev,\r\n      ...state\r\n    }));\r\n  }, [run, run.splits.size]);\r\n  React.useEffect(() => {\r\n    registerCallbacks({\r\n      addSplit,\r\n      undoSplit,\r\n      skipSplit,\r\n      resetSplits,\r\n      pause,\r\n      toggleHelp,\r\n      toggleBloodMoon\r\n    });\r\n  });\r\n\r\n  const getClasses = () => {\r\n    const classes = ['run-manager', 'bg'];\r\n    if (bloodMoonState.isActive) classes.push('is-blood-moon');\r\n    return classes.join(' ');\r\n  };\r\n\r\n  const touchCallbacks = {\r\n    onSplit: addSplit,\r\n    onUndo: undoSplit,\r\n    onReset: resetSplits,\r\n    onPause: pause,\r\n    onBloodMoon: toggleBloodMoon\r\n  };\r\n\r\n  const onPickedSeed = (seed: string) => {\r\n    const shrineIds = getRandomizedShrines(seed);\r\n    setRun(prev => ({ ...prev, seed, shrineIds }));\r\n    setRunState(RunState.Init);\r\n  };\r\n\r\n  const mainsection = () =>\r\n    run.state === RunState.None ? (\r\n      <SeedPicker onPickedSeed={onPickedSeed} />\r\n    ) : (\r\n      <RunDisplay run={run} onUpdatePausedTime={onUpdatePausedTime} />\r\n    );\r\n\r\n  return (\r\n    <div className={getClasses()}>\r\n      <KeyboardEventHandler handleKeys={['all']} onKeyEvent={handleKey} />\r\n      <div className=\"main\">\r\n        <AppHeader setRun={setRun} />\r\n        <SeedInfo run={run} />\r\n        {mainsection()}\r\n        <AppFooter\r\n          run={run}\r\n          touchCallbacks={touchCallbacks}\r\n          showHelp={showHelp}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n// import { getRandomizedShrines } from \"../../lib/rando\";\r\nimport { Run, RunState } from '../../lib/run';\r\nimport { RunManager } from '../RunManager/RunManager';\r\nimport '../../styles/style.scss';\r\nimport '../../assets/bloodmoon.svg';\r\n\r\nfunction App () {\r\n  // const testSeed = \"420SPECSNLUL69\";\r\n  // getRandomizedShrines(testSeed)\r\n  const run: Run = {\r\n    state: RunState.None,\r\n    runner: 'Probably Specs',\r\n    rundate: -1,\r\n    pausedTime: -1,\r\n    seed: '',\r\n    shrineIds: [],\r\n    splits: new Map([]),\r\n    pbSplits: new Map([]),\r\n    wrSplits: new Map([])\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <link rel=\"preload\" href=\"assets/bloodmoon.svg\" as=\"image\"></link>\r\n      <RunManager run={run} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\n/* eslint-disable no-console */\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\ntype Config = {\r\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register (config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n\t\t\t\t(contentType != null &&\r\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n/* eslint-enable no-console */\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
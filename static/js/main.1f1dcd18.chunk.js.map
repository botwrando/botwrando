{"version":3,"sources":["lib/run.ts","lib/keyboard.ts","lib/utils.ts","components/HotkeyList/HotkeyList.tsx","components/Help/Help.tsx","lib/shrines.ts","lib/rando.ts","components/QuickMap/QuickMap.tsx","components/SeedPicker/SeedPicker.tsx","lib/time.ts","components/FormattedTime/FormattedTime.tsx","components/ShrineInfo/ShrineInfo.tsx","components/SplitHistory/SplitHistory.tsx","components/RunTimer/RunTimer.tsx","components/SplitTimer/SplitTimer.tsx","lib/runstorage.ts","components/RunManager/RunManager.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["RunState","bindings","addSplit","desc","undoSplit","skipSplit","resetSplits","pause","toggleHelp","toggleBloodMoon","keyboardProfile","Space","Backspace","Period","KeyR","KeyP","KeyH","KeyB","Numpad1","Numpad8","Numpad2","Numpad3","Numpad5","NumpadAdd","NumpadSubtract","NumpadDivide","KeyQ","NumpadMultiply","F1","F4","F5","F3","F6","re_shortkeynames","re_shortnumpadnames","stringsubst","Add","Subtract","Divide","Multiply","getKeyMap","keys","list","keyGetter","map","Map","forEach","item","key","collection","get","push","set","groupBy","Object","entries","value","effect","HotkeyList","_props","Array","from","key_names","className","toString","keyname","outstr","search","replace","alphanum_matches","exec","length","numpad_matches","getShortKeyname","MobileControls","props","onClick","onSplit","onUndo","onPause","onReset","onBloodMoon","DesktopHelp","run","showHelp","Instructions","seed","getShrine","shrine_id","shrines","find","index","PLATEAU_SHRINES","range","bound","limit","start","end","base","idx","getRandomizedShrines","normalShrines","filter","id","indexOf","eventideSlot","shuffle","splice","QuickMap","shrine","bgClasses","join","SeedPicker","useState","setSeed","htmlFor","type","defaultValue","onChange","event","target","_event","onPickedSeed","trunc","ts","Math","floor","pad","zpad","out","substr","max","getTimestamp","tsMagn","abs","h","m","s","ms","FormattedTime","p","timestamp","full_format","plus_sign","empty_label","pos_sign","Number","NEGATIVE_INFINITY","sign","smart_format","ShrineInfo","current_shrine","diffProps","diff","diff_ts","diff_classes","is_ahead","is_pb","counter","name","SplitHistory","forceScroll","shrineIds","rando_id","splits","has_split","ShrineList","split","get_split","curr_split","other_split","wrSplits","get_diff","pb_split","pbSplits","get_is_pb","RunTimer","runstate","onUpdatePausedTime","React","startedAt","pausedAt","toggleTimer","setToggleTimer","timerDisplay","setTimerDisplay","pausedTime","setPausedTime","request_ref","useRef","update_time","_time","Init","Running","prev","Date","now","Paused","_prev","useEffect","current","requestAnimationFrame","cancelAnimationFrame","SplitTimer","state","Ended","RunDisplay","currentShrine","setTimestamp","timeclasses","setTimeclasses","time_classes","rundate","decodeRun","runJson","r","JSON","parse","RunManager","setRun","hasRun","setHasRun","shrinePtr","setShrinePtr","setShowHelp","isDone","isActive","bloodMoonState","setBloodMoonState","oldStorage","localStorage","getItem","setItem","runObj","stringify","encodeRun","None","size","updateSplits","updateShrines","setRunState","delete","clear","has","fn","callback","isTouch","window","matchMedia","matches","touchProps","lastCall","classes","getClasses","handleKeys","onKeyEvent","code","parseKeypress","App","defaultRun","runner","savedRun","rel","href","as","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1f1dcd18.chunk.js","sourcesContent":["export enum RunState {\r\n\tNone,\r\n\tInit,\r\n\tRunning,\r\n\tPaused,\r\n\tEnded\r\n}\r\n\r\nexport type Run = {\r\n\tstate: RunState;\r\n\trunner: string;\r\n\trundate: number;\r\n\tpausedTime: number;\r\n\tseed: string;\r\n\tshrineIds: number[];\r\n\tsplits: Map<number, number>;\r\n\twrSplits: Map<number, number>;\r\n\tpbSplits: Map<number, number>;\r\n};\r\n","import { groupBy } from \"./utils\";\r\n\r\nexport type Effect =\r\n\t| \"addSplit\"\r\n\t| \"undoSplit\"\r\n\t| \"skipSplit\"\r\n\t| \"resetSplits\"\r\n\t| \"pause\"\r\n\t| \"toggleHelp\"\r\n\t| \"toggleBloodMoon\";\r\n\r\nexport type FunctionMap = {\r\n\t[key in Effect]: Function;\r\n};\r\n\r\nexport type Binding = {\r\n\tdesc: string;\r\n\tcallback?: Function;\r\n};\r\n\r\nexport type BindingMap = {\r\n\t[key: string]: Binding;\r\n};\r\n\r\nexport let bindings: BindingMap = {\r\n\taddSplit: { desc: \"Start the run / add a split\" },\r\n\tundoSplit: { desc: \"Undo last split\" },\r\n\tskipSplit: { desc: \"Skip a split\" },\r\n\tresetSplits: { desc: \"Reset the run\" },\r\n\tpause: { desc: \"Pause the timer\" },\r\n\ttoggleHelp: { desc: \"Show / hide help\" },\r\n\ttoggleBloodMoon: { desc: \"Toggle Blood Moon shrine\" }\r\n};\r\n\r\nexport const registerCallbacks = (map: FunctionMap) => {\r\n\tObject.entries(map).forEach(value => {\r\n\t\tconst [key, fn] = value;\r\n\t\tbindings[key].callback = fn;\r\n\t});\r\n};\r\n\r\ntype Profile = { [key: string]: Effect };\r\n\r\nconst profileTeetow: Profile = {\r\n\tSpace: \"addSplit\",\r\n\tBackspace: \"undoSplit\",\r\n\tPeriod: \"skipSplit\",\r\n\tKeyR: \"resetSplits\",\r\n\tKeyP: \"pause\",\r\n\tKeyH: \"toggleHelp\",\r\n\tKeyB: \"toggleBloodMoon\"\r\n};\r\n\r\nconst profileLivesplit: Profile = {\r\n\tNumpad1: \"addSplit\",\r\n\tNumpad8: \"undoSplit\",\r\n\tNumpad2: \"skipSplit\",\r\n\tNumpad3: \"resetSplits\",\r\n\tNumpad5: \"pause\"\r\n};\r\n\r\nconst profileSpecs: Profile = {\r\n\tNumpadAdd: \"addSplit\",\r\n\tNumpadSubtract: \"undoSplit\",\r\n\tNumpadDivide: \"skipSplit\",\r\n\tKeyQ: \"resetSplits\",\r\n\tNumpadMultiply: \"pause\"\r\n};\r\n\r\nconst profileDj: Profile = {\r\n\tF1: \"addSplit\",\r\n\tF4: \"undoSplit\",\r\n\tF5: \"skipSplit\",\r\n\tF3: \"resetSplits\",\r\n\tF6: \"pause\"\r\n};\r\n\r\nconst keyboardProfile: Profile = {\r\n\t...profileTeetow,\r\n\t...profileLivesplit,\r\n\t...profileSpecs,\r\n\t...profileDj\r\n};\r\n\r\nexport const getProfile = () => keyboardProfile;\r\n\r\nexport const parseKeypress = (code: string): Function | undefined => {\r\n\tlet effect = keyboardProfile[code];\r\n\treturn bindings[effect]?.callback;\r\n};\r\n\r\nconst re_shortkeynames = /Key(.+)/;\r\nconst re_shortnumpadnames = /Numpad(.+)/;\r\nconst stringsubst: any = {\r\n\tAdd: \"+\",\r\n\tSubtract: \"-\",\r\n\tDivide: \"/\",\r\n\tMultiply: \"*\",\r\n\tPeriod: \".\"\r\n};\r\n\r\nexport const getShortKeyname = (keyname: string) => {\r\n\tlet outstr = keyname;\r\n\r\n\tObject.entries(stringsubst).forEach(value => {\r\n\t\tconst [search, replace] = value;\r\n\t\toutstr = outstr.replace(search, replace as string);\r\n\t});\r\n\r\n\tconst alphanum_matches = re_shortkeynames.exec(outstr);\r\n\tif (alphanum_matches && alphanum_matches.length > 0) {\r\n\t\treturn alphanum_matches[1];\r\n\t}\r\n\r\n\tconst numpad_matches = re_shortnumpadnames.exec(outstr);\r\n\tif (numpad_matches && numpad_matches.length > 0) {\r\n\t\tlet outstr = numpad_matches[1];\r\n\t\treturn `Num ${outstr}`;\r\n\t}\r\n\r\n\treturn outstr;\r\n};\r\n\r\nexport const getKeyMap = () => {\r\n\tconst keys = getProfile();\r\n\tconst grouped = groupBy(Object.entries(keys), (value: [string, Effect]) => {\r\n\t\tconst [, effect] = value;\r\n\t\treturn bindings[effect].desc;\r\n\t});\r\n\treturn grouped;\r\n};\r\n","export function groupBy(list: any, keyGetter: any) {\r\n\tconst map = new Map();\r\n\tlist.forEach((item: any) => {\r\n\t\tconst key = keyGetter(item);\r\n\t\tconst collection = map.get(key);\r\n\t\tif (!collection) {\r\n\t\t\tmap.set(key, [item]);\r\n\t\t} else {\r\n\t\t\tcollection.push(item);\r\n\t\t}\r\n\t});\r\n\treturn map;\r\n}\r\n\r\nexport function throttle(func: Function, limit: number): Function {\r\n\tlet inThrottle: boolean;\r\n\r\n\treturn function(this: any): any {\r\n\t\tconst args = arguments;\r\n\t\tconst context = this;\r\n\r\n\t\tif (!inThrottle) {\r\n\t\t\tinThrottle = true;\r\n\t\t\tfunc.apply(context, args);\r\n\t\t\tsetTimeout(() => (inThrottle = false), limit);\r\n\t\t}\r\n\t};\r\n}\r\n","import React from \"react\";\r\nimport \"./HotkeyList.scss\";\r\nimport { getKeyMap, getShortKeyname } from \"../../lib/keyboard\";\r\n\r\nexport type HotkeyListProps = {};\r\n\r\nexport const HotkeyList = (_props: HotkeyListProps) => {\r\n\tconst map = getKeyMap();\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{Array.from(map).map((value: [string, Function[][]]) => {\r\n\t\t\t\tconst [desc, keys] = value;\r\n\r\n\t\t\t\tconst key_names = keys.map(key => key[0]);\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"hotkey\" key={keys.toString()}>\r\n\t\t\t\t\t\t<div className=\"keys\">\r\n\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t{key_names.map(key => (\r\n\t\t\t\t\t\t\t\t<div className=\"key\" key={key.toString()}>\r\n\t\t\t\t\t\t\t\t\t{getShortKeyname(key.toString())}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"desc\">{desc}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { HotkeyList } from \"../HotkeyList/HotkeyList\";\r\nimport { Run } from \"../../lib/run\";\r\n\r\ntype MobileProps = {\r\n\trun: Run;\r\n\tonSplit: (event: React.MouseEvent) => void;\r\n\tonUndo: (event: React.MouseEvent) => void;\r\n\tonReset: (event: React.MouseEvent) => void;\r\n\tonPause: (event: React.MouseEvent) => void;\r\n\tonBloodMoon: (event: React.MouseEvent) => void;\r\n};\r\n\r\nexport const MobileControls = (props: MobileProps) => {\r\n\treturn (\r\n\t\t<div className=\"touchpanel\">\r\n\t\t\t<button className=\"split\" onClick={props.onSplit}>\r\n\t\t\t\tSplit\r\n\t\t\t</button>\r\n\t\t\t<button className=\"undo\" onClick={props.onUndo}>\r\n\t\t\t\tUndo\r\n\t\t\t</button>\r\n\t\t\t<button className=\"pause\" onClick={props.onPause}>\r\n\t\t\t\tPause\r\n\t\t\t</button>\r\n\t\t\t<button className=\"reset\" onClick={props.onReset}>\r\n\t\t\t\tReset\r\n\t\t\t</button>\r\n\t\t\t<button className=\"bloodmoon\" onClick={props.onBloodMoon}>\r\n\t\t\t\tBlood Moon\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\ntype DesktopProps = {\r\n\trun: Run;\r\n\tshowHelp: boolean;\r\n};\r\n\r\nexport const DesktopHelp = (props: DesktopProps) => {\r\n\tconst { run, showHelp } = props;\r\n\treturn (\r\n\t\t<div className={`help ${showHelp ? \"is-visible\" : \"\"}`}>\r\n\t\t\t{!showHelp && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"helphint\">\r\n\t\t\t\t\t\t<span className=\"key\">Space</span> to start / split\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t<span className=\"key\">H</span> to show / hide help\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t{showHelp && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"instructions\">\r\n\t\t\t\t\t\t<Instructions run={run} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"hotkeys\">\r\n\t\t\t\t\t\t<HotkeyList />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const Instructions = (props: { run: Run }) => {\r\n\tconst { run } = props;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>\r\n\t\t\t\tAll shrines except the Blood Moon shrine has been shuffled using\r\n\t\t\t\tthe seed {run.seed}.\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\tHit <span className=\"key\">B</span> to insert a Blood Moon shrine\r\n\t\t\t\tsplit.\r\n\t\t\t</p>\r\n\t\t</>\r\n\t);\r\n};\r\n","import shrines from '../data/shrines.json'\r\n\r\nexport type Location = {\r\n\tx: String;\r\n\ty: String;\r\n\tz: String;\r\n};\r\n\r\nexport type Shrine = {\r\n\tindex: Number;\r\n\tname: String | null;\r\n\tdesc: String | null;\r\n\tregion: String | null;\r\n\tlocation: Location;\r\n\tisBloodMoon: Boolean;\r\n\tisPlateau: Boolean;\r\n};\r\n\r\nexport const getShrine = (shrine_id: number): Shrine | undefined =>\r\n\tshrines.find(item => item.index === shrine_id);\r\n\r\nexport const PLATEAU_SHRINES: number[] = [38, 41, 9, 65];\r\nexport const BLOOD_MOON_SHRINE: number = 78;\r\nexport const EVENTIDE_SHRINE: number = 97;\r\n\r\nexport const isNormalShrine = (id: number): Boolean => {\r\n\treturn (\r\n\t\tPLATEAU_SHRINES.indexOf(id) === -1 &&\r\n\t\tBLOOD_MOON_SHRINE !== id && EVENTIDE_SHRINE !== id\r\n\t);\r\n};\r\n","import { shuffle } from \"shuffle-seed\";\r\nimport { PLATEAU_SHRINES, EVENTIDE_SHRINE, isNormalShrine } from \"./shrines\";\r\n\r\nexport function range(bound: number, limit: number = 0): number[] {\r\n\tconst start = limit ? bound : 0;\r\n\tconst end = limit ? limit : bound;\r\n\tconst base = [...Array.from(Array(end - start + 1).keys())];\r\n\treturn base.map((idx: number) => start + idx);\r\n}\r\n\r\nexport function getRandomSeed(): string {\r\n  const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\r\n  let a;\r\n  for (a = ''; a.length < 40;) { a += chars[(Math.random() * 60) | 0]; }\r\n  return a;\r\n}\r\n\r\nexport function getRandomizedShrines(seed: string): number[] {\r\n\tconst normalShrines = range(119).filter(item => isNormalShrine(item));\r\n\tconst eventideSlot = shuffle(range(80, 118), seed)[0];\r\n\r\n\tconst shrines: number[] = [];\r\n\tshrines.push(...shuffle(PLATEAU_SHRINES, seed));\r\n\tshrines.push(...shuffle(normalShrines, seed));\r\n\tshrines.splice(eventideSlot, 0, EVENTIDE_SHRINE);\r\n\r\n\treturn shrines;\r\n}\r\n","import React from \"react\";\r\nimport { Shrine } from \"../../lib/shrines\";\r\nimport \"../WorldMap/WorldMap.scss\";\r\nexport type QuickMapProps = {\r\n\tshrine?: Shrine;\r\n};\r\n\r\nexport const QuickMap = (props: QuickMapProps) => {\r\n\tconst { shrine } = props;\r\n\tif (!shrine) {\r\n\t\treturn <></>;\r\n\t}\r\n\tconst bgClasses = [\"mapwrapper\"];\r\n\tif (shrine) bgClasses.push(`bg-${shrine.index}`);\r\n\treturn (\r\n\t\t<div className=\"worldmap\">\r\n\t\t\t<div className={bgClasses.join(\" \")}></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { ChangeEvent, useState } from \"react\";\r\n\r\ntype SeedPickerProps = {\r\n\tonPickedSeed: (seed: string) => void;\r\n};\r\n\r\nexport const SeedPicker = (props: SeedPickerProps) => {\r\n\tconst exampleValue = \"CHANGEME\";\r\n\r\n\tconst [seed, setSeed] = useState(exampleValue);\r\n\r\n\tconst handleUpdateSeed = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetSeed(event.target.value);\r\n\t};\r\n\r\n\tconst handleSelectSeed = (\r\n\t\t_event: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n\t) => {\r\n\t\tprops.onPickedSeed(seed);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"seedpicker\">\r\n\t\t\t<label htmlFor=\"input-seedpicker\">Type in a seed!</label>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tid=\"input-seedpicker\"\r\n\t\t\t\tdefaultValue={exampleValue}\r\n\t\t\t\tonChange={handleUpdateSeed}\r\n\t\t\t/>\r\n\t\t\t<button onClick={handleSelectSeed}>Go!</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n","const HOUR_THRES = 1000 * 60 * 60;\r\nconst MINUTE_THRES = 1000 * 60;\r\n\r\nexport type Timestamp = {\r\n\tsign?: string;\r\n\th?: string;\r\n\tm?: string;\r\n\ts?: string;\r\n\tms?: string;\r\n};\r\n\r\nexport const trunc = (ts: number) => {\r\n\tif (ts < 10) {\r\n\t\treturn 0;\r\n\t}\r\n\treturn Math.floor(ts / 10);\r\n};\r\n\r\nexport const pad = (ts: number, zpad: number = 2) => {\r\n\tlet out = ts.toString();\r\n\twhile (out.length < zpad) {\r\n\t\tout = '0' + out;\r\n\t}\r\n\treturn out.substr(0, (zpad > 0 ? Math.max(zpad, out.length) : out.length));\r\n};\r\n\r\nexport const getTimestamp = (ts: number): Timestamp => {\r\n\tlet tsMagn: number = Math.abs(ts);\r\n\tconst h = Math.floor(tsMagn / HOUR_THRES);\r\n\ttsMagn -= h * HOUR_THRES;\r\n\tconst m = Math.floor(tsMagn / MINUTE_THRES);\r\n\ttsMagn -= m * MINUTE_THRES;\r\n\tconst s = Math.floor(tsMagn / 1000);\r\n\ttsMagn -= s * 1000;\r\n\tconst ms = tsMagn;\r\n\treturn { h: pad(h), m: pad(m), s: pad(s), ms: pad(trunc(ms)) };\r\n};\r\n\r\nexport const smart_format = (\r\n\ttimestamp: number,\r\n\tfull_format: boolean,\r\n\tpos_sign: string = \"\",\r\n): Timestamp => {\r\n\tif (timestamp === Number.NEGATIVE_INFINITY) {\r\n\t\treturn {}\r\n\t}\r\n\tconst sign = timestamp >= 0 ? pos_sign : \"-\";\r\n\tconst { h, m, s, ms } = getTimestamp(timestamp);\r\n\r\n\tlet out = {};\r\n\r\n\tif (Math.abs(timestamp) >= HOUR_THRES)\r\n\t\tout = full_format ? { h, m, s, ms } : { h, m, s };\r\n\telse if (Math.abs(timestamp) >= MINUTE_THRES) \r\n\t\tout = full_format ? { m, s, ms } : { m, s };\r\n\telse \r\n\t\tout = { s, ms };\r\n\tout = { ...out, sign };\r\n\r\n\treturn out;\r\n};\r\n","import React from \"react\";\r\nimport { smart_format } from \"../../lib/time\";\r\n\r\nexport type FormattedTimeProps = {\r\n\ttimestamp?: number;\r\n\tfull_format?: boolean;\r\n\tplus_sign?: string;\r\n\tempty_label?: string;\r\n};\r\n\r\nexport const FormattedTime = (props: FormattedTimeProps) => {\r\n\tconst p = {\r\n\t\ttimestamp: 0,\r\n\t\tfull_format: false,\r\n\t\tplus_sign: \"\",\r\n\t\tempty_label: \"--:--\",\r\n\t\t...props\r\n\t}\r\n\tconst { sign, h, m, s, ms } = smart_format(p.timestamp, p.full_format);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{sign && (<><span className=\"sign\">{sign}</span>:</>)}\r\n\t\t\t{h && (<><span className=\"h\">{h}</span>:</>)}\r\n\t\t\t{m && (<><span className=\"m\">{m}</span>:</>)}\r\n\t\t\t{s && (<><span className=\"s\">{s}</span></>)}\r\n\t\t\t{ms && (<><span className=\"ms\">.{ms}</span></>)}\r\n\t\t\t{(!h && !m && !s && !ms) && (<span className=\"empty\">{p.empty_label}</span>)}\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { FormattedTime } from \"../FormattedTime/FormattedTime\";\r\nimport \"./ShrineInfo.scss\";\r\nimport { getShrine } from \"../../lib/shrines\";\r\n\r\nexport type ShrineInfoProps = {\r\n\tcounter: number;\r\n\tshrine_id: number;\r\n\ttimestamp: number;\r\n\tis_main?: boolean;\r\n\tdiff?: number;\r\n\tis_ahead?: boolean;\r\n\tis_pb?: boolean;\r\n};\r\n\r\nexport const ShrineInfo = (props: ShrineInfoProps) => {\r\n\tconst current_shrine = getShrine(props.shrine_id);\r\n\r\n\tconst diffProps = {\r\n\t\ttimestamp: props.diff,\r\n\t\tplus_sign: \"+\",\r\n\t\tempty_label: \"--\"\r\n\t};\r\n\tconst diff_ts = props.diff ? <FormattedTime {...diffProps} /> : \"\";\r\n\tconst ts = <FormattedTime timestamp={props.timestamp} />;\r\n\r\n\tconst diff_classes = [\"diff\"];\r\n\tif (props.is_ahead) diff_classes.push(\"is-ahead\");\r\n\tif (props.is_pb) diff_classes.push(\"is-pb\");\r\n\r\n\treturn (\r\n\t\t<div className=\"shrine infolog\">\r\n\t\t\t<div className=\"counter\">{props.counter + 1}</div>\r\n\t\t\t<div className=\"name\">{current_shrine?.name}</div>\r\n\t\t\t<div className={diff_classes.join(\" \")}>{diff_ts}</div>\r\n\t\t\t<div className=\"time\">{ts}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport { Run } from \"../../lib/run\";\r\nimport { ShrineInfo } from \"../ShrineInfo/ShrineInfo\";\r\n\r\nconst ShrineList = (\r\n\tshrine_id: number,\r\n\trando_id: number,\r\n\ttimestamp: number,\r\n\tdiff: number,\r\n\tis_pb: boolean\r\n) => (\r\n\t<ShrineInfo\r\n\t\tkey={shrine_id}\r\n\t\tshrine_id={shrine_id}\r\n\t\tcounter={rando_id}\r\n\t\ttimestamp={timestamp}\r\n\t\tdiff={diff}\r\n\t\tis_ahead={diff <= 0}\r\n\t\tis_pb={is_pb}\r\n\t/>\r\n);\r\n\r\nexport type SplitHistoryProps = {\r\n\trun: Run;\r\n};\r\n\r\nexport const SplitHistory = (props: SplitHistoryProps) => {\r\n\tconst { run } = props;\r\n\r\n\tconst has_split = (rando_id: number) => run.splits.get(rando_id);\r\n\r\n\tconst get_split = (rando_id: number) => {\r\n\t\tconst split = run.splits.get(rando_id);\r\n\t\treturn split ? split : -1;\r\n\t};\r\n\r\n\tconst get_diff = (rando_id: number): number => {\r\n\t\tconst curr_split = run.splits.get(rando_id);\r\n\t\tconst other_split = run.wrSplits.get(rando_id);\r\n\t\tif (curr_split && other_split) return curr_split - other_split;\r\n\r\n\t\treturn Number.NEGATIVE_INFINITY;\r\n\t};\r\n\r\n\tconst get_is_pb = (rando_id: number) => {\r\n\t\tconst curr_split = run.splits.get(rando_id);\r\n\t\tconst pb_split = run.pbSplits.get(rando_id);\r\n\t\tif (curr_split && pb_split) return curr_split - pb_split < 0;\r\n\r\n\t\treturn false;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"history\">\r\n\t\t\t<ScrollableFeed forceScroll={true} className=\"historylist\">\r\n\t\t\t\t{run.shrineIds\r\n\t\t\t\t\t.filter((shrine_id, rando_id) => has_split(rando_id))\r\n\t\t\t\t\t.map((shrine_id, rando_id) =>\r\n\t\t\t\t\t\tShrineList(\r\n\t\t\t\t\t\t\tshrine_id,\r\n\t\t\t\t\t\t\trando_id,\r\n\t\t\t\t\t\t\tget_split(rando_id),\r\n\t\t\t\t\t\t\tget_diff(rando_id),\r\n\t\t\t\t\t\t\tget_is_pb(rando_id)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)}\r\n\t\t\t</ScrollableFeed>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { FormattedTime } from \"../FormattedTime/FormattedTime\";\r\nimport { RunState } from \"../../lib/run\";\r\n\r\ntype ToggleTimer = {\r\n\tstartedAt: number;\r\n\tpausedAt: number;\r\n};\r\n\r\nexport type RunTimerProps = {\r\n\ttimestamp: number;\r\n\trunstate: RunState;\r\n\tonUpdatePausedTime: Function;\r\n};\r\n\r\nexport const RunTimer = (props: RunTimerProps) => {\r\n\tconst { timestamp, runstate, onUpdatePausedTime } = props;\r\n\tconst [toggleTimer, setToggleTimer] = React.useState<ToggleTimer>({\r\n\t\tstartedAt: -1,\r\n\t\tpausedAt: -1\r\n\t});\r\n\tconst [timerDisplay, setTimerDisplay] = React.useState(0);\r\n\tconst [pausedTime, setPausedTime] = React.useState(0);\r\n\r\n\tconst request_ref = React.useRef<number>(-1);\r\n\r\n\tconst update_time = (_time: number) => {\r\n\t\tif (runstate === RunState.Init) {\r\n\t\t\tsetTimerDisplay(0);\r\n\t\t\tsetPausedTime(-1);\r\n\t\t}\r\n\t\tif (runstate === RunState.Running) {\r\n\t\t\tif (toggleTimer.startedAt === -1) {\r\n\t\t\t\tsetToggleTimer(prev => ({ ...prev, startedAt: Date.now() }));\r\n\t\t\t}\r\n\t\t\tif (toggleTimer.pausedAt !== -1) {\r\n\t\t\t\tsetPausedTime(prev => prev + Date.now() - toggleTimer.pausedAt);\r\n\t\t\t\tprops.onUpdatePausedTime(pausedTime);\r\n\t\t\t\tsetToggleTimer(prev => ({ ...prev, pausedAt: -1 }));\r\n\t\t\t}\r\n\t\t\tsetTimerDisplay(Date.now() - timestamp - pausedTime);\r\n\t\t} else if (runstate === RunState.Paused) {\r\n\t\t\tif (toggleTimer.startedAt !== -1) {\r\n\t\t\t}\r\n\t\t\tif (toggleTimer.pausedAt === -1) {\r\n\t\t\t\tsetToggleTimer(_prev => ({\r\n\t\t\t\t\tstartedAt: -1,\r\n\t\t\t\t\tpausedAt: Date.now()\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\trequest_ref.current = requestAnimationFrame(update_time);\r\n\t\treturn () => cancelAnimationFrame(request_ref.current);\r\n\t});\r\n\r\n\tReact.useEffect(() => {\r\n\t\tonUpdatePausedTime(pausedTime);\r\n\t}, [pausedTime]);\r\n\r\n\treturn <FormattedTime timestamp={timerDisplay} full_format={true} />;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Run, RunState } from \"../../lib/run\";\r\nimport { RunTimer } from \"../RunTimer/RunTimer\";\r\nimport { getShrine } from \"../../lib/shrines\";\r\n\r\nexport type SplitTimerProps = {\r\n\trun: Run;\r\n\tcurrentShrine: number;\r\n\tonUpdatePausedTime: (paused_time: number) => void;\r\n};\r\n\r\nexport const SplitTimer = (props: SplitTimerProps) => {\r\n\tconst { run } = props;\r\n\r\n\tlet out = <></>;\r\n\r\n\tif (run.state === RunState.Ended) {\r\n\t\tout = <Ended />;\r\n\t} else {\r\n\t\tout = <RunDisplay {...props} />;\r\n\t}\r\n\r\n\treturn <>{out}</>;\r\n};\r\n\r\nconst _NotStarted = () => <>Not started</>;\r\nconst _Paused = () => <>Paused</>;\r\nconst Ended = () => <>Ended</>;\r\n\r\nconst RunDisplay = (props: SplitTimerProps) => {\r\n\tconst { run, currentShrine } = props;\r\n\tconst shrine_id = run.shrineIds[currentShrine];\r\n\tconst current_shrine = getShrine(shrine_id);\r\n\r\n\tconst [timestamp, setTimestamp] = useState(-1);\r\n\tconst [timeclasses, setTimeclasses] = useState([\"time\"]);\r\n\tuseEffect(() => {\r\n\t\tconst time_classes = [\"time\"];\r\n\t\tif (run.state === RunState.Init) {\r\n\t\t\ttime_classes.push(\"is-initial\");\r\n\t\t}\r\n\t\tif (run.state === RunState.Paused) {\r\n\t\t\ttime_classes.push(\"is-paused\");\r\n\t\t}\r\n\t\tif (run.state === RunState.Ended) {\r\n\t\t\ttime_classes.push(\"is-ended\");\r\n\t\t}\r\n\t\tsetTimeclasses(time_classes);\r\n\t}, [run.state]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimestamp(run.rundate);\r\n\t}, [run.rundate]);\r\n\r\n\treturn (\r\n\t\t<div className=\"shrine current\">\r\n\t\t\t<div className=\"counter\">\r\n\t\t\t\t{currentShrine > -1 ? currentShrine + 1 : \"\"}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"name\">\r\n\t\t\t\t{current_shrine?.name ? current_shrine.name : \"Ready to go\"}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"desc\">\r\n\t\t\t\t{current_shrine?.desc\r\n\t\t\t\t\t? current_shrine.desc\r\n\t\t\t\t\t: \"Start the timer to reveal the first shrine!\"}\r\n\t\t\t</div>\r\n\t\t\t<div className={timeclasses.join(\" \")}>\r\n\t\t\t\t<RunTimer\r\n\t\t\t\t\ttimestamp={timestamp}\r\n\t\t\t\t\trunstate={run.state}\r\n\t\t\t\t\tonUpdatePausedTime={props.onUpdatePausedTime}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Run, RunState } from \"./run\";\r\n\r\nexport const decodeRun = (runJson: string): Run => {\r\n\tconst r = JSON.parse(runJson);\r\n\tconst runObj = {\r\n\t\t...r,\r\n\t\tsplits: new Map(r.splits),\r\n\t\tpbSplits: new Map(r.pbSplits),\r\n\t\twrSplits: new Map(r.wrSplits),\r\n\t\t// state: r.state\r\n\t};\r\n\treturn runObj;\r\n};\r\n\r\nexport const encodeRun = (r: Run): string => {\r\n\tconst runObj = {\r\n\t\t...r,\r\n\t\tsplits: Array.from(r.splits.entries()),\r\n\t\tpbSplits: Array.from(r.pbSplits.entries()),\r\n\t\twrSplits: Array.from(r.wrSplits.entries())\r\n\t};\r\n\tconst runJson = JSON.stringify(runObj);\r\n\treturn runJson;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport \"../../assets/bloodmoon.svg\";\r\nimport { DesktopHelp, MobileControls } from \"../Help/Help\";\r\nimport { parseKeypress, registerCallbacks } from \"../../lib/keyboard\";\r\nimport { getRandomizedShrines } from \"../../lib/rando\";\r\nimport { QuickMap } from \"../QuickMap/QuickMap\";\r\nimport { Run, RunState } from \"../../lib/run\";\r\nimport { SeedPicker } from \"../SeedPicker/SeedPicker\";\r\nimport { BLOOD_MOON_SHRINE, Shrine, getShrine } from \"../../lib/shrines\";\r\nimport { SplitHistory } from \"../SplitHistory/SplitHistory\";\r\nimport { SplitTimer } from \"../SplitTimer/SplitTimer\";\r\nimport { encodeRun, decodeRun } from \"../../lib/runstorage\";\r\n\r\ntype RunManagerProps = {\r\n\trun: Run;\r\n};\r\n\r\ntype BloodMoonState = {\r\n\tisDone: boolean;\r\n\tisActive: boolean;\r\n};\r\n\r\nexport const RunManager = (props: RunManagerProps) => {\r\n\tconst [run, setRun] = useState(props.run);\r\n\tconst [hasRun, setHasRun] = useState(false);\r\n\tconst [shrinePtr, setShrinePtr] = useState(-1);\r\n\tconst [showHelp, setShowHelp] = useState(false);\r\n\tconst [bloodMoonState, setBloodMoonState] = useState<BloodMoonState>({\r\n\t\tisDone: false,\r\n\t\tisActive: false\r\n\t});\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst oldStorage = localStorage.getItem(\"run\");\r\n\t\tif (oldStorage) {\r\n\t\t\tconst decodedRun = decodeRun(oldStorage);\r\n\t\t\tif (decodedRun != run) {\r\n\t\t\t\tlocalStorage.setItem(\"run\", encodeRun(run));\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (run.state == RunState.None || run.state == RunState.Init) {\r\n\t\t\tsetShrinePtr(-1);\r\n\t\t} else {\r\n\t\t\tsetShrinePtr(run.splits.size);\r\n\t\t}\r\n\t});\r\n\r\n\tconst onUpdatePausedTime = (pausedTime: number) => {\r\n\t\tsetRun(prev => ({ ...prev, pausedTime }));\r\n\t};\r\n\r\n\tconst updateSplits = (splits: Map<number, number>) => {\r\n\t\tsetRun(prev => ({ ...prev, splits }));\r\n\t};\r\n\r\n\tconst updateShrines = (shrineIds: number[]) => {\r\n\t\tsetRun(prev => ({ ...prev, shrineIds }));\r\n\t};\r\n\r\n\tconst setRunState = (state: RunState) => {\r\n\t\tsetRun(prev => ({ ...prev, state: state }));\r\n\r\n\t\tif (state === RunState.Running) {\r\n\t\t\tif (run.rundate === -1) {\r\n\t\t\t\tsetRun(prev => ({ ...prev, rundate: Date.now() }));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst addSplit = () => {\r\n\t\tif (run.state === RunState.Paused) {\r\n\t\t\tsetRunState(RunState.Running);\r\n\t\t}\r\n\t\tif (run.state === RunState.Ended) return;\r\n\t\tif (run.state === RunState.Init) {\r\n\t\t\tsetRunState(RunState.Running);\r\n\t\t}\r\n\t\tif (run.state === RunState.Running) {\r\n\t\t\tconst splits = run.splits;\r\n\t\t\tsplits.set(shrinePtr, Date.now() - run.rundate - run.pausedTime);\r\n\t\t\tupdateSplits(splits);\r\n\t\t}\r\n\t};\r\n\r\n\tconst undoSplit = () => {\r\n\t\tconst splits = run.splits;\r\n\t\tif (splits.size < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsplits.delete(shrinePtr - 1);\r\n\t\tupdateSplits(splits);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (shrinePtr >= run.shrineIds.length) {\r\n\t\t\tsetRunState(RunState.Ended);\r\n\t\t} else if (\r\n\t\t\trun.state == RunState.Ended &&\r\n\t\t\tshrinePtr > -1 &&\r\n\t\t\tshrinePtr < run.shrineIds.length\r\n\t\t) {\r\n\t\t\tsetRunState(RunState.Running);\r\n\t\t}\r\n\t}, [shrinePtr]);\r\n\r\n\tconst skipSplit = () => {\r\n\t\tif (run.state === RunState.Ended) return;\r\n\r\n\t\tconst splits = run.splits;\r\n\t\tsplits.set(shrinePtr, -1);\r\n\t\tupdateSplits(splits);\r\n\t};\r\n\r\n\tconst resetSplits = () => {\r\n\t\tconst splits = run.splits;\r\n\t\tsplits.clear();\r\n\t\tupdateSplits(splits);\r\n\t\tsetRun(prev => ({ ...prev, pausedTime: -1, rundate: -1 }));\r\n\t\tsetRunState(RunState.Init);\r\n\t};\r\n\r\n\tconst pause = () => setRunState(RunState.Paused);\r\n\r\n\tconst toggleHelp = () => setShowHelp(!showHelp);\r\n\r\n\tconst toggleBloodMoon = () => {\r\n\t\tconst { shrineIds } = run;\r\n\r\n\t\tif (bloodMoonState.isDone) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst currentShrine = Math.max(0, shrinePtr);\r\n\r\n\t\tif (shrineIds[currentShrine] === BLOOD_MOON_SHRINE) {\r\n\t\t\tshrineIds.splice(currentShrine, 1);\r\n\t\t\tupdateShrines(shrineIds);\r\n\t\t} else {\r\n\t\t\tshrineIds.splice(currentShrine, 0, BLOOD_MOON_SHRINE);\r\n\t\t\tupdateShrines(shrineIds);\r\n\t\t}\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst state = {\r\n\t\t\tisActive:\r\n\t\t\t\trun.shrineIds[Math.max(0, shrinePtr)] === BLOOD_MOON_SHRINE,\r\n\t\t\tisDone: run.splits.has(run.shrineIds.indexOf(BLOOD_MOON_SHRINE))\r\n\t\t};\r\n\t\tsetBloodMoonState(prev => ({\r\n\t\t\t...prev,\r\n\t\t\t...state\r\n\t\t}));\r\n\t}, [run, shrinePtr]);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tregisterCallbacks({\r\n\t\t\taddSplit,\r\n\t\t\tundoSplit,\r\n\t\t\tskipSplit,\r\n\t\t\tresetSplits,\r\n\t\t\tpause,\r\n\t\t\ttoggleHelp,\r\n\t\t\ttoggleBloodMoon\r\n\t\t});\r\n\t});\r\n\r\n\tconst getClasses = () => {\r\n\t\tconst classes = [\"bg\"];\r\n\t\tif (bloodMoonState.isActive) classes.push(\"is-blood-moon\");\r\n\t\treturn classes.join(\" \");\r\n\t};\r\n\r\n\tconst getCurrentShrine = (): Shrine | undefined => {\r\n\t\tconst current_shrine = getShrine(run.shrineIds[shrinePtr]);\r\n\t\treturn current_shrine;\r\n\t};\r\n\r\n\tconst isTouch = window.matchMedia(\"(pointer: coarse)\").matches;\r\n\tconst touchProps = {\r\n\t\trun: run,\r\n\t\tonSplit: addSplit,\r\n\t\tonUndo: undoSplit,\r\n\t\tonReset: resetSplits,\r\n\t\tonPause: pause,\r\n\t\tonBloodMoon: toggleBloodMoon\r\n\t};\r\n\r\n\tlet lastCall = Date.now();\r\n\r\n\tconst handleKey = (key: string, event: KeyboardEvent) => {\r\n\t\tlet ts = Date.now();\r\n\t\tif (ts - lastCall < 16) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlastCall = ts;\r\n\t\tconst callback = parseKeypress(event.code);\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback();\r\n\t\t}\r\n\t};\r\n\r\n\tconst onPickedSeed = (seed: string) => {\r\n\t\tconst shrineIds = getRandomizedShrines(seed);\r\n\t\tsetRun(prev => ({ ...prev, seed: seed, shrineIds: shrineIds }));\r\n\t\tsetHasRun(true);\r\n\t\tsetRunState(RunState.Init);\r\n\t};\r\n\r\n\tconst header = () => (\r\n\t\t<div className=\"header\">Botw All Shrines Randomizer</div>\r\n\t);\r\n\r\n\tconst seedinfo = () =>\r\n\t\thasRun ? (\r\n\t\t\t<div className=\"seedinfo\">Seed: {run.seed}</div>\r\n\t\t) : (\r\n\t\t\t<div className=\"seedinfo\"></div>\r\n\t\t);\r\n\r\n\tconst mainsection = () =>\r\n\t\trun.state === RunState.None ? (\r\n\t\t\t<SeedPicker onPickedSeed={onPickedSeed} />\r\n\t\t) : (\r\n\t\t\t// <div className=\"splashscreen\">Ready to rock!</div>\r\n\t\t\t<>\r\n\t\t\t\t<SplitHistory run={run} />\r\n\t\t\t\t<SplitTimer\r\n\t\t\t\t\trun={run}\r\n\t\t\t\t\tcurrentShrine={shrinePtr}\r\n\t\t\t\t\tonUpdatePausedTime={onUpdatePausedTime}\r\n\t\t\t\t/>\r\n\t\t\t\t<QuickMap shrine={getCurrentShrine()} />\r\n\t\t\t</>\r\n\t\t);\r\n\r\n\tconst footer = () =>\r\n\t\tisTouch ? (\r\n\t\t\t<MobileControls {...touchProps} />\r\n\t\t) : (\r\n\t\t\t<DesktopHelp run={run} showHelp={showHelp} />\r\n\t\t);\r\n\r\n\tconst out = (\r\n\t\t<div className={getClasses()}>\r\n\t\t\t<KeyboardEventHandler handleKeys={[\"all\"]} onKeyEvent={handleKey} />\r\n\t\t\t<div className=\"main\">\r\n\t\t\t\t{header()}\r\n\t\t\t\t{seedinfo()}\r\n\t\t\t\t{mainsection()}\r\n\t\t\t\t{footer()}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn out;\r\n};\r\n","import React from \"react\";\r\nimport { Run, RunState } from \"../../lib/run\";\r\nimport { RunManager } from \"../RunManager/RunManager\";\r\nimport \"../../styles/style.scss\";\r\nimport \"../../assets/bloodmoon.svg\";\r\nimport { decodeRun } from \"../../lib/runstorage\";\r\n\r\nfunction App() {\r\n\tconst defaultRun: Run = {\r\n\t\tstate: RunState.None,\r\n\t\trunner: \"Probably Specs\",\r\n\t\trundate: -1,\r\n\t\tpausedTime: -1,\r\n\t\tseed: \"\",\r\n\t\tshrineIds: [],\r\n\t\tsplits: new Map([]),\r\n\t\tpbSplits: new Map([]),\r\n\t\twrSplits: new Map([])\r\n\t};\r\n\r\n\tconst savedRun = localStorage.getItem(\"run\");\r\n\tconst run = savedRun ? decodeRun(savedRun) : defaultRun;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<link rel=\"preload\" href=\"assets/bloodmoon.svg\" as=\"image\"></link>\r\n\t\t\t<RunManager run={run} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === \"[::1]\" ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\ntype Config = {\r\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { \"Service-Worker\": \"script\" }\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get(\"content-type\");\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null &&\r\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then(registration => {\r\n\t\t\t\tregistration.unregister();\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}